---
title: Query Parameters
order: 7
layout: page
---

= Query Parameters

We can retrieve any query parameters contained in a URL; for example, `?name1=value1&name2=value2`.

Use the [methodname]`getQueryParameters()` method of a [classname]`Location` instance to access query parameters.
You can retrieve the [classname]`Location` class through the [classname]`BeforeEnterEvent` parameter of the [methodname]`BeforeEnterObserver::beforeEnter()` method or the [classname]`BeforeEvent` parameter of the [methodname]`HasUrlParameter::setParameter()` method.

[NOTE]
A [classname]`Location` object represents a relative URL made up of path segments and query parameters, but without the host name; for example, `new Location("book/search?keyword=Vaadin")`.

*Example*: Retrieving query parameters from a [classname]`BeforeEvent`.

[source,java]
----
@Override
public void setParameter(BeforeEvent event,
        @OptionalParameter String parameter) {

    Location location = event.getLocation();
    QueryParameters queryParameters = location.getQueryParameters();

    Map<String, List<String>> parametersMap = queryParameters
            .getParameters();
}
----
[NOTE]
[methodname]`getQueryParameters()` supports multiple values associated with the same key; for example, `https://example.com/?genre=fiction&restrictions=16+&genre=classic` will result in the corresponding map `{"genre" : ["fiction", "classic"], "restrictions": ["16+"]}}`.
