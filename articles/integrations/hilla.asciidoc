---
title: Hilla
description: Create hybrid apps combining Hilla/React views with Flow views.
order: 450
---

[role="since:com.vaadin:vaadin@V24.3"]
= Flow-Hilla Hybrid Applications

https://hilla.dev/docs/react[Hilla] is a framework by Vaadin for building reactive web applications on Java backends. It seamlessly integrates a [React](https://reactjs.org/) TypeScript frontend with a [Spring Boot](https://spring.io/projects/spring-boot) backend.

You can develop hybrid applications that leverage Vaadin Flow and Hilla. This allows you to combine Vaadin Flow components and routes with the ones written in React in one single application.

This section demonstrates how to create a hybrid application from the https://github.com/vaadin/skeleton-starter-hilla-react[React+Hilla application].

== Add Vaadin And Hilla Dependencies

Open your `pom.xml` file and add the necessary dependencies for Vaadin Flow:

.Added Vaadin bom
[source,xml]
----
<properties>
    <java.version>17</java.version>
    <vaadin.version>24.3.0</vaadin.version>
    <hilla.version>2.4.0</hilla.version>
</properties>

<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-bom</artifactId>
            <version>${vaadin.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>dev.hilla</groupId>
            <artifactId>hilla-bom</artifactId>
            <version>${hilla.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <!-- Other pom imports -->
    </dependencies>
</dependencyManagement>
----

Add the `vaadin-core` / `vaadin` dependency:

.Vaadin dependency
[source,xml]
----
<dependency>
    <groupId>com.vaadin</groupId>
    <!-- Replace artifactId with vaadin-core to use only free components -->
    <artifactId>vaadin</artifactId>
</dependency>
----

== Enable Feature Flag

React integration for Vaadin Flow is under development, and thus it is behind a feature flag at the moment.

Enable it by adding the following parameter into [filename]`src/main/resources/vaadin-featureflags.properties`:

.`vaadin-featureflags.properties`
[source,properties]
----
com.vaadin.experimental.reactRouter=true
----

== Add The Server-Side Routes Entry

In the [filename]`frontend/routes.tsx` file, import and include the `serverSideRoutes` object:

.Import server-side routes
[source,javascript]
----
import {serverSideRoutes} from "Frontend/generated/flow/Flow";

// ...
export const routes = [
    // Hilla routes definitions
    ...serverSideRoutes
]
----

.Import server-side routes for CRM tutorial
[source,javascript]
----
import { serverSideRoutes } from "Frontend/generated/flow/Flow";
import MainLayout from 'Frontend/views/MainLayout';
import ContactsView from 'Frontend/views/ContactsView';
import AboutView from 'Frontend/views/AboutView';
import { RouteObject } from 'react-router-dom';

export const routes: RouteObject[] = [
    {
        element: <MainLayout />,
        handle: { title: 'Hilla CRM' },
        children: [
            { path: '/', element: <ContactsView />, handle: { title: 'Contacts' } },
            { path: '/about', element: <AboutView />, handle: { title: 'About' } },
            ...serverSideRoutes
        ],
    },
];
----

Adding `serverSideRoutes` is required for React Router to be able to navigate to server-side (Vaadin Flow) routes.
If this configuration is missed and the feature flag is enabled, Vaadin throws a runtime exception in build time.

.Route configuration and React dependencies
[NOTE]
Vaadin creates [filename]`frontend/App.tsx` and [filename]`frontend/routes.tsx` files automatically, if they are missing, as well as internal `Frontend/generated/flow/Flow.tsx` file and adds React frontend dependencies, such as `react`, `react-dom` and `react-router-dom`.

== Add Vaadin Flow Routes

Add Vaadin Flow routes, as described in <<{articles}/routing/route#, Defining Routes>>.

[discussion-id]`3633d698-98cb-11ee-b9d1-0242ac120002`

++++
<style>
[class^=PageHeader-module-descriptionContainer] {display: none;}
</style>
++++
