---
title: Handling Session Expiration
description: How to detect session expiration, for example to show a login view to the user.
order: 141
layout: page
---

= Handling Session Expiration

Use the built-in <<../advanced/client-middleware#, middleware>> [classname]#InvalidSessionMiddleWare# to detect session expiration.
For example, you could use this to show a login view to the user.

== How to Use the InvalidSessionMiddleWare

[classname]#InvalidSessionMiddleWare# requires [methodname]#OnInvalidSessionCallback# as a constructor parameter.
[methodname]#OnInvalidSessionCallback# is a function that takes no parameters and should return a promise of [classname]#LoginResult#.
[classname]#LoginResult# contains the metadata of a login result, including:

`error`::
Indicates whether the login attempt has failed.

`token`::
In the event of a successful login, this is the cross-site request forgery (CSRF) prevention token, which can be extracted from the [filename]#index.html# page.
See <<configuring#csrf-projection-of-vaadin-endpoints, CSRF Protection of Hilla Endpoints>> for more information.

`errorTitle`::
A short text describing a login error.

`errorMessage`::
A more detailed explanation of the login error.


.Example using [classname]#InvalidSessionMiddleWare#
[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/fusion/authentication/handle-session-expiration/connect-client.ts[]
----
[source,typescript]
----
include::{root}/frontend/demo/fusion/authentication/handle-session-expiration/login-overlay.ts[]
----
--
