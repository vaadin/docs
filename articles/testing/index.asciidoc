---
title: Testing
order: 170
---

[[testbench.uiunit]]
= [since:com.vaadin:vaadin@V23.2]#Browser-Less and Browser-Based Testing#

== Browser-Less Unit Testing

UI unit testing removes the necessity to run both the browser and the servlet container, to test your Vaadin-based applications faster.

UI unit testing is *browser-less*, so you look up components straight from [methodname]`UI.getCurrent()`, bypassing the browser and the JavaScript->server bridge.
You call methods directly on your server-side view classes and on the server-side Java Vaadin components.

UI unit testing is *container-less*, so you do not need to launch the servlet container.
UI unit testing creates the Vaadin Session, the UI and other necessary Vaadin classes straight in the JVM that runs your JUnit tests.

[[testbench.overview]]
== Browser-Based Testing with TestBench

:commercial-feature: TestBench
include::{articles}/_commercial-banner.asciidoc[opts=optional]

Vaadin TestBench is a tool for creating and running *browser-based* integration tests for your Vaadin application.
TestBench simulates a user of your application, performs the tasks specified using Java code, and verifies that the expected actions take place in the application.

TestBench can also visually inspect your application and detect unintentionally introduced changes, and verify that the application is visually OK in all the browsers you are testing with.
TestBench also includes special support for other Vaadin products, making testing easy and robust compared to generic web testing solutions.

== Topics

section_outline::[]
