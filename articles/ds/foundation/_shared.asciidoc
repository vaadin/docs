// tag::flow-fusion[]
In server-side views (Flow/Java), the custom properties are imported automatically. See <<{articles}/theming/using-themes#,Using Themes>> for more information how to apply the correct application theme.

In client-side views (Fusion/TypeScript), you need to explicitly import the custom properties before you can use them in your style sheets.
// end::flow-fusion[]

// tag::css-props[]
Learn how to use <<{articles}/theming/css-custom-properties#,CSS Custom Properties>>.
// end::css-props[]

// tag::dark-mode[]
Dark mode is commonly used in low-light environments or during night-time. A dark palette is defined in addition to the default light palette.

In server-side views (Flow/Java), use the variant attribute of the `@Theme` annotation. See <<{articles}/theming/using-themes#,Using Themes>> for more information.

[source, java, subs="attributes"]
----
@Theme(value = {dark-mode-theme}.class, variant = {dark-mode-theme}.DARK)
----

In client-side views (Fusion/TypeScript), set the theme attribute on the `<html>` element.

[source, typescript]
----
document.documentElement.setAttribute("theme", "dark");
----

[source, html]
----
<html theme="dark">
----

You can also use the same attribute on any element which is in the global style scope (see
  <<{articles}/theming/style-scopes#,Style Scopes>>).
// end::dark-mode[]

// tag::icon-usage[]
See the documentation for the <<{articles}/ds/components/icon#,Icon>> component for more information.

=== Advanced Usage (Fusion/TypeScript)

If you need to be in control of when or how https://www.webcomponents.org/element/PolymerElements/iron-icon[iron-icon] is imported, you may import `iconset.js` instead of `icons.js`.
The `iconset.js` file imports only the icon definitions (`iron-iconset-svg`) without automatically importing the `iron-icon` element.
// end::icon-usage[]
