// tag::importing[]
ifdef::import-name+module-name[]
== Importing

[.example]
--
Import the custom properties before using them in your style sheets.

[source,typescript,subs="attributes"]
----
include::../../../frontend/demo/foundation/{import-name}-tokens.ts[tags="{module-name}",group=TypeScript]
----

[source,typescript,subs="attributes"]
----
include::../../../frontend/demo/foundation/{import-name}-tokens.ts[hidden]
----

The custom properties are imported automatically.

[source,java]
----
<source-info group="Java"></source-info>
// No need to do anything
----
--
endif::[]
// end::importing[]

// tag::dark-mode[]
== Dark Mode
:attribute-missing: drop

Dark mode is commonly used in low-light environments or during night-time.
A dark color palette is defined in addition to the default light color palette.

[.example]
--
Set the theme attribute on the `<html>` element.

[source,typescript]
----
<source-info group="TypeScript"></source-info>
document.documentElement.setAttribute("theme", "dark");
----

[source,html]
----
<source-info group="TypeScript"></source-info>
<html theme="dark">
----

Use the variant attribute of the `@Theme` annotation.

[source,java,subs="attributes"]
----
<source-info group="Java"></source-info>
@Theme(themeClass = {dark-mode-theme}.class, variant = {dark-mode-theme}.DARK)
----
--

You can also add the `theme="dark"` attribute on any HTML element which is in the global style scope, to apply the dark color palette to a part of the application.

Use the theme toggle button next to the docs search input to preview the dark color palette values.
// end::dark-mode[]
