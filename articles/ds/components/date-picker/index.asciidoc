---
title: Date Picker
layout: tabbed-page
tab-title: Usage
page-links:
  - https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-date-picker-flow}[Flow {moduleMavenVersion:com.vaadin:vaadin-date-picker-flow}]
  - https://github.com/vaadin/vaadin-date-picker/releases/tag/v{moduleNpmVersion:vaadin-date-picker}[Web Component {moduleNpmVersion:vaadin-date-picker}]
section-nav: incomplete
---

= Date Picker

// tag::description[]
Date Picker is an input field that allows the user to enter a date by typing or by selecting from a calendar overlay.
// end::description[]

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

//:component-name: Date Picker
//:text-field-features: true
//include::../_shared.asciidoc[tag=field-features]

.Work In Progress
[NOTE]
====
The usage examples for this component are currently in progress. In the meantime, you can view the previous examples for the web component and the Java/Flow component.

[.buttons]
- https://vaadin.com/components/vaadin-date-picker/html-examples[Web Component Examples]
- https://vaadin.com/components/vaadin-date-picker/java-examples[Java Component Examples]
====

The date can be entered directly using the keyboard in the format of the current locale or through the date picker overlay.
The overlay opens when the field is clicked and/or any input is entered when the field is focused.

== Validation

=== Minimum & Maximum Value

The valid input range of Date Picker can be restricted by defining minimum and maximum values.
Dates before the minimum and after the maximum will be disabled in the overlay.
A helper text can be used to inform the user about the accepted range.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-min-max.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerMinMax.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Custom Validation

In addition to setting the valid range, Date Picker also supports custom validation, such as limiting the options to Monday through Friday.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-custom-validation.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerCustomValidation.java[render,tags=snippet,indent=0,group=Java]
----
--

== Week Numbers

Week numbers (https://www.iso.org/iso-8601-date-and-time-format.html[ISO-8601]) can be enabled in the calendar overlay.
This works only when the first day of the week is set to Monday.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-week-numbers.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerWeekNumbers.java[render,tags=snippet,indent=0,group=Java]
----
--

== Initial Position

Date Picker’s initial position parameter defines which date is focused in the calendar overlay when the overlay is opened.
The default initial position is the selected or current date.

Use this feature to minimise the need for any additional navigation and/or scrolling when the user’s input is expected to be within a certain timeframe.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-initial-position.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerInitialPosition.java[render,tags=snippet,indent=0,group=Java]
----
--

== Auto Open

The overlay automatically opens when the field is focused.
This can be disabled, to have the overlay only open when the toggle button or Up/Down arrow keys are pressed.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-auto-open.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerAutoOpen.java[render,tags=snippet,indent=0,group=Java]
----
--

== Usage Patterns

=== Date Range

You can accomplish a date range picker using two Date Pickers.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-date-range.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerDateRange.java[render,tags=snippet,indent=0,group=Java]
----
--

To disable the days before the start date in the end date picker, you need to handle the selection in the start date picker and change the range in the end date picker.

== Best Practises

=== Picking vs Typing

The calendar overlay is useful when the users need to choose a day that is close to the current date or when additional information such as day of the week, week number, and valid dates, etc. can aid in choosing the best option.

For days well in the past or future, and for known dates such as birthdays, typing the date in the input field is usually the faster and easier approach. Therefore it is important to verify that the user can enter dates according to their locale.
See <<parsing,Parsing>> for more details on how to parse user input.

Alternatively, you can use individual input fields for day, month and year, to improve mobile usability.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-individual-input-fields.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerIndividualInputFields.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Indicate the Date Format

Use a placeholder or helper to indicate how the input should be formatted.
For example, 12/6/2020 represents different dates for Americans and Europeans.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/datepicker/date-picker-date-format-indicator.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datepicker/DatePickerDateFormatIndicator.java[render,tags=snippet,indent=0,group=Java]
----
--

Helpers are generally preferable to placeholders, as they are always visible.
Fields with placeholders are also less noticeable than empty fields and susceptible to being skipped.
Use placeholders when space is limited, e.g. when Date Picker is used as a filter in a data grid header.

== Technical

=== Locale

=== Parsing

== Related Components

|===
|Component |Usage recommendations

|<<../time-picker#,Time Picker>>
|Input field for entering or selecting a specific time.

|<<../date-time-picker#,Date Time Picker>>
|Input field for selecting both a date and a time.
|===




