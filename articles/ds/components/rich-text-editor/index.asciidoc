---
title: Rich Text Editor
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-rich-text-editor}/#/elements/vaadin-rich-text-editor[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/richtexteditor/RichTextEditor.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-rich-text-editor}/packages/vaadin-rich-text-editor[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-rich-text-editor-flow-parent[Java]'
section-nav: commercial
---

= Rich Text Editor

:commercial-feature: Rich Text Editor
include::{articles}/_commercial-banner.asciidoc[opts=optional]

// tag::description[]
Rich Text Editor is an input field for entering rich text.
// end::description[]
It allows you to format and style your text using boldface, italics, headings, lists, images, links etc.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorBasic.java[render,tags=snippet,indent=0,group=Java]
----

--

== Read-Only

Setting the component to read-only hides the toolbar and makes the content non-editable.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-readonly.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorReadonly.java[render,tags=snippet,indent=0,group=Java]
----

--

== Automatic Height Adjustment

Unless set to a fixed height, Rich Text Area adjusts its height automatically based on its content.

=== Minimum and Maximum Height

The automatic resizing can be restricted to a minimum and maximum height.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-min-max-height.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorMinMaxHeight.java[render,tags=snippet,indent=0,group=Java]
----

--

== Theme Variants

=== Compact

Apply the `compact` theme to make the toolbar more compact.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-theme-compact.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorThemeCompact.java[render,tags=snippet,indent=0,group=Java]
----

--

=== No Border

Apply the `no-border` theme variant to remove Rich Text Editor’s border, for example, when the component is wrapped in a container with its own borders.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-theme-no-border.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorThemeNoBorder.java[render,tags=snippet,indent=0,group=Java]
----

--

== Value Format

Rich Text Editor natively uses the JSON-based https://github.com/quilljs/delta[Delta format] for reading and setting its value, but HTML values can also be used with some limitations.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/richtexteditor/rich-text-editor-set-get-value.ts[render,tags=htmlsnippet;snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/richtexteditor/RichTextEditorSetGetValue.java[render,tags=snippet,indent=0,group=Java]
----

--

== Toolbar Actions

=== History

[cols="^.^1a,4,8"]
|===
|Button|Title|Description

|image::icons/undo.svg[opts=inline, 20, 20, role=icon]
|Undo
|Reverses the previous action

|image::icons/redo.svg[opts=inline, 20, 20, role=icon]
|Redo
|Restores actions undone by `Undo`

|===

=== Emphasis

[cols="^.^1,4,8"]
|===
|Button|Title|Description

|[.bold.rte-button]#B#
|Bold
s|Boldens text

|[.italic.rte-button]#I#
|Italic
e|Italicizes text

|[.underline.rte-button]#U#
|Underline
|[.underline]#Underlines text#

|[.strikethrough.rte-button]#T#
|Strikethrough
|[.strikethrough]#Strikethroughs text#

|===

=== Headings

Three different headings are available in Rich Text Editor; H1, H2 and H3. Use them in order to signify structure (and importance).

[cols="^.^1,4,8"]
|===
|Button|Title|Description

|[.h1.heading.rte-button]#H1#
|H1
|[.h1]#Heading level 1#

|[.h2.heading.rte-button]#H2#
|H2
|[.h2]#Heading level 2#

|[.h3.heading.rte-button]#H3#
|H3
|[.h3]#Heading level 3#

|===

=== Subscript & Superscript

[cols="^.^1,4,8"]
|===
|Button|Title|Description

|[.subscript.rte-button]#X#
|Subscript
|Subscript text is positioned ~below~ the normal baseline and with smaller font size

|[.superscript.rte-button]#X#
|Superscript
|Superscript text is positioned ^above^ the normal baseline and with smaller font size

|===

=== List

[cols="^.^1a,4,8a"]
|===
|Button|Title|Description

|image::icons/list-ordered.svg[opts=inline, 20, 20, role=icon]
|Ordered list
|. Creates a numbered list

|image::icons/list-bullet.svg[opts=inline, 20, 20, role=icon]
|Unordered list
|* Creates a bulleted list

|===

=== Alignment

[cols="^.^1a,4,8"]
|===
|Button|Title|Description

|image::icons/align-left.svg[opts=inline, 20, 20, role=icon]
|Left align
<|Left aligns text (default)

|image::icons/align-center.svg[opts=inline, 20, 20, role=icon]
|Center align
^|Center aligns text

|image::icons/align-right.svg[opts=inline, 20, 20, role=icon]
|Right align
>|Right aligns text

|===

=== Image & Link

[cols="^.^1a,4,8"]
|===
|Button|Title|Description

|image::icons/image.svg[opts=inline, 20, 20, role=icon]
|Image
|Uploads and inserts an image from your device

|image::icons/link.svg[opts=inline, 20, 20, role=icon]
|Link
a|https://vaadin.com/[Creates a hyperlink]

|===

=== Blocks

[cols="^.^1,4,8"]
|===
|Button|Title|Description

|[.block-quote.rte-button]#”#
|Block quote
|Creates a section quoted from another source

|[.code-block.rte-button]#<>#
|Code block
|Creates a block of formatted as code

|===

=== Clear

[cols="^.^1a,4,8"]
|===
|Button|Title|Description

|image::icons/clean.svg[opts=inline, 20, 20, role=icon]
|Clear formatting
|Removes any and all formatting of the selected text

|===

== Related Components

|===
|Component | Usage recommendations

|<<../text-field#, Text Field>>
|Basic single-line text input.

|<<../text-area#, Text Area>>
|Basic multi-line text input.

|===

++++
<style>
  .imageblock.icon {
    margin: 0;
    background-color: transparent;
  }

  .icon > .content {
    padding-bottom: calc(var(--docs-space-xs) * 2.3) !important;
    background: var(--docs-gray-50) !important;
  }

  .icon .content svg {
    fill: var(--docs-secondary-text-color);
  }

  .rte-button {
    display: block;
    width: calc(var(--docs-space-s) * 6.5);
    margin: var(--docs-space-xs);
    color: var(--docs-secondary-text-color);
    background: var(--docs-gray-50);
    border-radius: var(--docs-border-radius-m);
    line-height: calc(var(--docs-line-height-m) * 2);
    font-weight: 600;
  }

  .bold {
    font-weight: 700;
  }

  .italic {
    font-style: italic;
  }

  .underline {
    text-decoration: underline;
  }

  .strikethrough {
    text-decoration: line-through;
  }

  .heading {
    letter-spacing: -0.05em;
  }

  .h1 {
    line-height: calc(var(--docs-line-height-s) * 2.1);
    font-size: calc(var(--docs-font-size-m) * 1.2);
  }

  .h2 {
    line-height: calc(var(--docs-line-height-s) * 2.5);
  }

  .h3 {
    line-height: calc(var(--docs-line-height-m) * 2.3);
    font-size: var(--docs-font-size-s);
  }

  .subscript,
  .superscript {
    position: relative;
  }

  .subscript::after,
  .superscript::after {
    content: "2";
    position: absolute;
    left: 65%;
    line-height: normal;
    font-size: calc(var(--docs-font-size-2xs) / 1.3);
    font-weight: 700;
  }

  sub {
    vertical-align: sub;
    font-size: smaller;
  }

  sup {
    vertical-align: super;
    font-size: smaller;
  }

  .subscript::after {
    top: 50%;
  }

  .superscript::after {
    top: 24%;
  }

  .block-quote,
  .code-block {
    padding: 0 calc(var(--docs-space-s) * 2);
  }

  .block-quote {
    display: block;
    padding-top: var(--docs-space-m);
    line-height: calc(var(--docs-line-height-s) / 1.1);
    font-size: calc(var(--docs-font-size-m) * 2);
  }

  .code-block {
    line-height: calc(var(--docs-line-height-s) * 2.1);
    font-size: calc(var(--docs-font-size-m) * 1.2);
    padding-left: calc(var(--docs-space-s) * 1.7);
  }
</style>
++++
