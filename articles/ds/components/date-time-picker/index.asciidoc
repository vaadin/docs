---
title: Date Time Picker
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-date-time-picker-flow}\[Flow {moduleMavenVersion:com.vaadin:vaadin-date-time-picker-flow}], \
https://github.com/vaadin/vaadin-date-time-picker/releases/tag/v{moduleNpmVersion:vaadin-date-time-picker}\[Web Component {moduleNpmVersion:vaadin-date-time-picker}]
---

= Date Time Picker

// tag::description[]
Date Time Picker is an input field for selecting both a date and a time.
// end::description[]

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

The date and time can be entered directly using a keyboard in the format of the current locale or through the Date Time Picker's two overlays.
The overlays open when their respective fields are clicked or any input is entered when the fields are focused.

:component-name: Date Time Picker
:text-field-features: true
include::../_shared-field-features.asciidoc[]

== Step

Date Time Picker’s step parameter defines the interval for the items in the time picker overlay.
It also specifies the amount by which the time increases/decreases using the Up/Down arrow keys (when the overlays are disabled).

The default step is one hour.
Note that, unlike with <<../number-field#,Number Field>>, Date Time Picker accepts values that do not align with the specified step.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-minutes-step.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerMinutesStep.java[render,tags=snippet,indent=0,group=Java]
----
--

.Use even steps
[NOTE]
The step must divide an hour or day evenly.
For example, _"15 minutes"_, _"30 minutes"_ and _"2 hours"_ are valid steps, while _"42 minutes"_ is not.

The displayed time format changes based on the step.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-seconds-step.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerSecondsStep.java[render,tags=snippet,indent=0,group=Java]
----
--

|===
|Step |Format

|Less than 60 seconds
|HH:MM:SS

|Less than 1 second
|HH:MM:SS:FFF
|===

.Limit the number of steps
[NOTE]
The overlay does not appear for steps less than 900 seconds (15 minutes) to avoid showing an impractical number of choices.

== Auto Open

The overlay opens automatically when the field is focused using a pointer (mouse or touch), or when the user types in the field.
You can disable that to only open the overlay when the toggle button or Up/Down arrow keys are pressed.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-auto-open.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerAutoOpen.java[render,tags=snippet,indent=0,group=Java]
----
--

== Validation

=== Minimum & Maximum Value

You can define a minimum and maximum value for Date Time Picker if you need to restrict the input to a specific range:

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-min-max.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerMinMax.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Custom Validation

If the minimum and maximum values are not sufficient, you can also apply custom validation.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-custom-validation.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerCustomValidation.java[render,tags=snippet,indent=0,group=Java]
----
--

== Week Numbers

You can configure Date Time Picker to show week numbers in the date picker overlay.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-week-numbers.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerWeekNumbers.java[render,tags=snippet,indent=0,group=Java]
----
--

The week numbers are displayed according to https://www.iso.org/iso-8601-date-and-time-format.html[ISO-8601]. Please note that they can only be displayed when the first day of the week is Monday.

== Initial Position

Date Time Picker’s initial position parameter defines which date is focused in the calendar overlay when the overlay is opened.
Use this feature to minimise the need for any additional navigation and/or scrolling when the user’s input is expected to be within a certain time frame.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-initial-position.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerInitialPosition.java[render,tags=snippet,indent=0,group=Java]
----
--

== Usage Patterns

=== Date Time Range

You can accomplish a date time range picker using two Date Time Pickers.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-range.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerRange.java[render,tags=snippet,indent=0,group=Java]
----
--

To disable the days before the start date in the end date picker, you need to handle the selection in the start date picker and change the range in the end date picker.

== Best Practises

Use Date Time Picker when the user needs to choose both a date and time of day.
If you only need a date or time of day, use <<../date-picker#,Date Picker>> and <<../time-picker#,Time Picker>> respectively.

=== Picking vs Typing

The calendar overlay is useful when the users need to choose a day that is close to the current date or when information such as day of the week, week number, and valid dates, etc. can aid in choosing the best option.

For days well in the past or future, and for known dates such as birthdays, typing the date can be the faster and easier approach.
It is important to verify that the user can enter dates according to their locale.
See <<parsing,Parsing>> for more details on how to parse user input.

=== Input Format

Use a placeholder or helper to show how the input should be formatted. This is important for the date picker if the overlay is disabled and/or when supporting multiple locales. For example, 12/6/2020 does not represent the same date for Americans as it does Europeans.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/datetimepicker/date-time-picker-input-format.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/datetimepicker/DateTimePickerInputFormat.java[render,tags=snippet,indent=0,group=Java]
----
--

Helpers are generally preferable to placeholders, as they are always visible, thereby requiring less short-term memory.
Fields with placeholders are also less noticeable than empty fields and susceptible to being skipped.

Use placeholders when space is limited, for example, when Date Time Picker is used as a grid filter.


== Related Components

[cols="1,2"]
|===
|Component |Usage recommendations

|<<../time-picker#,Time Picker>>
|Input field for entering or selecting a specific time.

|<<../date-picker#,Date Picker>>
|Input field for entering or selecting a specific date.
|===
