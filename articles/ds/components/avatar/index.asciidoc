---
title: Avatar
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-avatar}/#/elements/vaadin-avatar[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/avatar/Avatar.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-avatar}/packages/vaadin-avatar[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-avatar-flow-parent[Java]'
---

= Avatar

// tag::description[]
Avatar is a graphical representation of an object or entity, for example a person or an organisation.
// end::description[]

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

.Real-time collaboration
[NOTE]
This component is optimized for use with https://vaadin.com/collaboration[Collaboration Engine]—a simple way to build real-time collaboration into your app—but can also be used standalone as a regular component.

++++
<style>
.example iframe {
  height: 100px;
}
</style>
++++

== Content

Avatar has three properties: *name*, *abbreviation* and *image*.

pass:[<!-- vale Microsoft.Auto = NO -->]

=== Name & Abbreviation

The name is shown on hover in a tooltip.
When a name is set, Avatar will auto-generate and display an abbreviation of the specified name.
For example, “Allison Torres” becomes “AT”, “John Smith” becomes “JS”, etc.

pass:[<!-- vale Microsoft.Auto = YES -->]

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-name.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarName.java[render,tags=snippet,indent=0,group=Java]
----
--

The abbreviation can also be set manually.
Abbreviations should be kept to a maximum of 2–3 characters.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-abbreviation.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarAbbreviation.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Image

Avatar can be used to display images, such as user profile pictures or company logos.
Abbreviations are not shown when images are used.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-image.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarImage.java[render,tags=snippet,indent=0,group=Java]
----
--

== Avatar Group
Avatar Group is used to group multiple Avatars together.
It can be used, for example, to show that there are multiple users viewing the same page or for listing members of a project.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-group-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarGroupBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Max Number of Items
You can specify the max number of items an Avatar Group should display.
Items that overflow are grouped into a single Avatar that displays the overflow count.
The name of each hidden item is shown on hover in a tooltip.
Clicking the overflow item displays the overflowing avatars and names in a list.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/avatar/avatar-group-max-items.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarGroupMaxItems.java[render,tags=snippet,indent=0,group=Java]
----
--

== Background Color
By default, there are 7 different background colors you can use for Avatar.
The background color is set using a color index.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-group-bg-color.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarGroupBgColor.java[render,tags=snippet,indent=0,group=Java]
----
--

Using different background colors can be useful when you need to be able to
distinguish between users, for example during collaborative work.

pass:[<!-- vale Vaadin.Headings = NO -->]

== Internationalisation (i18n)

pass:[<!-- vale Vaadin.Headings = YES -->]

All of Avatar's and Avatar Group's default texts are configurable:

=== Avatar Texts

[cols="1,1,2"]
|===
| Property | Text | Description

|`anonymous`
|"Anonymous"
|Avatar's default name.
Shown on hover in a tooltip and announced by screen readers when the Avatar is focused.
|===

=== Avatar Group Texts

[cols="1,1,2"]
|===
| Property | Text | Description

|`anonymous`
|"Anonymous"
|Default name for all Avatars in the Avatar Group.

|`activeUsers.one`
|"Currently one active user"
|Announced by screen readers when there's exactly one Avatar in an Avatar Group and the Avatar is focused.
The name of the Avatar is read aloud first.

|`activeUsers.many`
|"Currently {count} active users"
|Announced by screen readers when there are multiple Avatars in an Avatar Group and an Avatar is focused.
The name of the focused Avatar is read aloud first.

*{count} is the Avatar Group item count.

|`joined`
|"{user} joined"
|Announced by screen readers when an Avatar is added to the group.

*{user} is the Avatar's name.

|`left`
|"{user} left"
|Announced by screen readers when an Avatar is removed from the group.

*{user} is the Avatar's name.
|===

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/avatar/avatar-group-internationalisation.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarGroupInternationalisation.java[render,tags=snippet,indent=0,group=Java]
----
--

== Size Variants

Avatar has four size variants available:

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-sizes.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarSizes.java[render,tags=snippet,indent=0,group=Java]
----
--

|===
| Variant | Theme name

|Extra large
|`xlarge`

|Large
|`large`

|Small
|`small`

|Extra small
|`xsmall`

|===

Size variants should only be used in special cases.
See <<../../foundation/size-space#,Size and Space>> for details on how to
change the default Avatar size.

== Use Cases

Avatar can be paired with Menu Bar to create a user account menu.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/avatar/avatar-menu-bar.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/avatar/AvatarMenuBar.java[render,tags=snippet,indent=0,group=Java]
----
--
