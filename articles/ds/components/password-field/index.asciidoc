---
title: Password Field
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-text-field}/#/elements/vaadin-password-field[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/textfield/PasswordField.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-text-field}/packages/vaadin-text-field[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-text-field-flow-parent[Java]'
---
= Password Field

// tag::description[]
Password Field is an input field for entering passwords.
// end::description[]
The input is masked by default.
On mobile devices the last typed letter is shown for a brief moment.
The masking can be toggled using an optional reveal button.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/passwordfield/password-field-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/passwordfield/PasswordFieldBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

:component-name: Password Field
:text-field-features: true
include::../_shared.asciidoc[tag=field-features]

== Reveal Button

The reveal button allows the user to disable masking and see the value they've typed in.
This is especially helpful on mobile devices where typing is more error-prone.
In cases where this feature is not desired, it can be disabled.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/passwordfield/password-field-reveal-button-hidden.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/passwordfield/PasswordFieldRevealButtonHidden.java[render,tags=snippet,indent=0,group=Java]
----
--

== Best Practices

Clearly indicate your password requirements to the user, so that they don't have to guess.
The <<../input-fields#helper,Helper>> feature is appropriate for this purpose.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/passwordfield/password-field-helper.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/passwordfield/PasswordFieldHelper.java[render,tags=snippet,indent=0,group=Java]
----
--

Showing the strength of the entered password can also be a motivating factor for users to create better passwords.
You could indicate it with a more advanced Helper:

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/passwordfield/password-field-advanced-helper.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/passwordfield/PasswordFieldAdvancedHelper.java[render,tags=snippet,indent=0,group=Java]
----
--
