---
title: Checkbox
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-checkbox}/#/elements/vaadin-checkbox[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/checkbox/Checkbox.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-checkbox}/packages/vaadin-checkbox[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-checkbox-flow-parent[Java]'
---

= Checkbox

// tag::description[]
Checkbox is an input field representing a binary choice.
// end::description[]
Checkbox Group is a group of related binary choices.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-group-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxGroupBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

Use Checkbox Group to group related items.
Individual checkboxes should be used for options that are not related to each other in any way.

:component-name: Checkbox Group
include::../_shared.asciidoc[tag=field-features]

== States

=== Disabled

Disable a field to mark it as currently unavailable.
Disabled state is used for fields that are not editable and do not need to be readable.
Disabled elements cannot be focused and may be inaccessible to assistive technologies like screen readers.

Disabling can be preferable to hiding an element to prevent changes in layout when the element's visibility changes, and to make users aware of its existence even when currently unavailable.


[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-disabled.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxDisabled.java[render,tags=snippet,indent=0,group=Java]
----
--

.Read-only state
[NOTE]
Checkbox does not support read-only state.

=== Indeterminate

The indeterminate state can be used for a parent checkbox to show that there is a mix of checked and unchecked child items in a list, and to change the state of all child items at once.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-indeterminate.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxIndeterminate.java[render,tags=snippet,indent=0,group=Java]
----
--

== Orientation

The component's default orientation is horizontal but vertical orientation is recommended whenever possible as it's easier for the user to scan a vertical list of options:

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-vertical.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxVertical.java[render,tags=snippet,indent=0,group=Java]
----
--

In cases where vertical space needs to be conserved, horizontal orientation can be used, but no more than 3 options are recommended:

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-horizontal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxHorizontal.java[render,tags=snippet,indent=0,group=Java]
----
--

== Best Practices

=== Labeling

Aim for short and descriptive labels using positive wording.
*Avoid negations*.

[source,typescript, role=render-only]
----
include::{root}/frontend/demo/component/checkbox/checkbox-labeling.ts[render,tags=snippet,indent=0]
----

It is important to provide labels for Checkbox Groups to clearly distinguish adjacent groups.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/checkbox/checkbox-adjacent-groups.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/checkbox/CheckboxAdjacentGroups.java[render,tags=snippet,indent=0,group=Java]
----
--

== Related Components

[cols="1,2"]
|===
|Component |Usage recommendations

|<<../select#,Select>>|A field for selecting an item from a list of options which are presented in an overlay.
Recommended when there is insufficient space for a Radio Button Group.

|<<../combo-box#,Combo Box>>|A filterable, lazy loading alternative to Select, recommended for ten or more items.

|<<../list-box#,List Box>>|Scrollable list of options.
Supports single and multi-select.

|<<../radio-button#,Radio Button Group>>|Corresponding component for mutually exclusive options, or “single-select”.
|===
