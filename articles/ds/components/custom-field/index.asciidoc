---
title: Custom Field
layout: tabbed-page
tab-title: Usage
page-links:
  - https://github.com/vaadin/flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-custom-field-flow}[Flow {moduleMavenVersion:com.vaadin:vaadin-custom-field-flow}]
  - https://github.com/vaadin/web-components/releases/tag/v{moduleNpmVersion:vaadin-custom-field}[Web Component {moduleNpmVersion:vaadin-custom-field}]
---

= Custom Field

:components-path-prefix: ../

// tag::description[]
Custom Field is a component for wrapping multiple components as a single field. It has the same features as <<{components-path-prefix}input-fields#,Input Fields>>, such as its own label, helper, validation, and data binding. Use it to create custom input components.
// end::description[]

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/custom-field/custom-field-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/DateRangePicker.java[tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/CustomFieldBasic.java[render,tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/LocalDateRange.java[tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/domain/Appointment.java[tags=snippet,indent=0,group=Java]
----
--

== Basic Usage

Custom Field is optimised for wrapping the following components:

* <<../text-field#,Text Field>>
* <<../number-field#,Number Filed>>
* <<../password-field#,Password Field>>
* <<../text-area#,Text Area>>
* <<../select#,Select>>
* <<../combo-box#,Combo Box>>
* <<../date-picker#,Date Picker>>
* <<../time-picker#,Time Picker>>

It can also be used to provide a label, helper, and the other field features, for components that don't have them built-in, such as <<../list-box#,List Box>>.

== Native Input Fields

Custom Field works with native HTML elements.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/custom-field/custom-field-native-input.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/PaymentInformationField.java[tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/CustomFieldNativeInput.java[render,tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/PaymentInformation.java[tags=snippet,indent=0,group=Java]
----
--

== Supported Features

* <<../input-fields#label,Label>>
* <<../input-fields#helper,Helper>>
* <<../input-fields#required,Required>>

== Size Variants

The small theme variant can be used to make Custom Field's label, helper, and error message smaller.
Custom Field does not propagate its theme variant to its internal components, meaning each internal component's theme variant must be set individually.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/custom-field/custom-field-size-variants.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/MoneyField.java[tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/CustomFieldSizeVariants.java[render,tags=snippet,indent=0,group=Java]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/customfield/Money.java[tags=snippet,indent=0,group=Java]
----
--
