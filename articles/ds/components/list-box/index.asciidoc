---
title: List Box
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-list-box/{moduleNpmVersion:vaadin-list-box}/#/elements/vaadin-list-box[Web Component] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/listbox/ListBox.html[Java]'
  - 'Source: https://github.com/vaadin/vaadin-list-box[Web Component] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-list-box-flow-parent[Java]'
---

= List Box

// tag::description[]
List Box allows the user to select one or more values from a scrollable list of items.
// end::description[]

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-basic.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxBasic.java[render,tags=snippet,indent=0]
----
--

Although functionally similar to <<../checkbox#,Checkbox Group>> and <<../radio-button#,Radio Button Group>>, List Box is designed to be used as a lightweight scrollable selection list rather than a form input field.

== Dividers

You can use dividers to group related items.
Use them sparingly to avoid creating unnecessary visual clutter.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-separators.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxSeparators.java[render,tags=snippet,indent=0]
----
--

== Disabled Items

Disable items to show that they are unavailable for selection at the moment.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-disabled-items.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxDisabledItems.java[render,tags=snippet,indent=0]
----
--

.Accessibility
[NOTE]
====
Some assistive technologies do not announce disabled items.
====

== Selection

List Box supports both single and multiple selection.
The former allows the user to select only one item while the latter enables multiple items to be selected.

=== Single

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-single-selection.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxSingleSelection.java[render,tags=snippet,indent=0]
----
--

=== Multi

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-multi-selection.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxMultiSelection.java[render,tags=snippet,indent=0]
----
--

== Custom Item Presentation

pass:[<!-- vale Vaadin.TooWordy = NO -->]

Items can be rendered with rich content instead of plain text.
This can be useful to provide additional information in a more legible fashion than appending it to the item text.

pass:[<!-- vale Vaadin.TooWordy = YES -->]

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/listbox/list-box-custom-item-presentation.ts[preimport,hidden]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/listbox/ListBoxCustomItemPresentation.java[render,tags=snippet,indent=0]
----
--

== Best Practices

List Box is not designed to be used as an input field in forms, and lacks features like label, helper, and validation errors.
See related components below for better options for use in forms.
List Box is best suited to be used as a lightweight, scrollable, single-column list for single or multi-selection of items.

== Related Components

|===
|Component |Usage recommendations

|<<../checkbox#,Checkbox Group>>
|Input field for selecting multiple options from a list.

|<<../combo-box#,Combo Box>>
|Select a value from a filterable overlay. Appropriate for large sets of options. Supports lazy loading and entry of custom values.

|<<../radio-button#,Radio Button Group>>
|Select a single option from a list. Optimal accessibility, as all options are visible without any user action.

|<<../select#,Select>>
|Input field for selecting a value from a overlay. More compact than a Radio Button Group.

|<<../grid#,Grid>>
|A more advanced list component for cases where multiple columns, filtering or lazy loading is required.
|===
