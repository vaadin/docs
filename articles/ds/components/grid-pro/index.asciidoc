---
title: Grid Pro
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-grid-pro}/#/elements/vaadin-grid-pro[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/gridpro/GridPro.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-grid-pro}/packages/vaadin-grid-pro[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-grid-pro-flow-parent[Java]'
section-nav: commercial
---

= Grid Pro
:experimental:

:commercial-feature: Grid Pro
include::{articles}/_commercial-banner.asciidoc[opts=optional]

// tag::description[]
Grid Pro is an extension of the Grid component that provides inline editing with full keyboard navigation.
// end::description[]

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

.Features shared with Grid
[NOTE]
====
Grid Pro is an extension of the <<../grid#,Grid>> component and all Grid's features
are applicable to Grid Pro as well.
====

== Usage
Begin editing by:

- Double clicking on the editable cell
- Pressing kbd:[Enter], kbd:[Space] or typing an alphanumeric character when an editable cell is focused

When editing:

- kbd:[Esc] discards the changes and exits edit mode
- kbd:[Enter] and kbd:[Shift + Enter] saves the changes and exits edit mode
- kbd:[Tab] and kbd:[Shift + Tab] saves the changes and focuses the next and previous editable cell, respectively, while remaining in edit mode

== Modes

=== Edit on Single Click

Single Click Edit is a mode that enables the user to begin editing by single
clicking on an editable cell.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-single-click.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProSingleClick.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Single Cell Edit

By default, when in edit mode, kbd:[Tab] and kbd:[Shift+Tab] moves to the next and previous editable cell, respectively, while remaining in edit mode.

Single Cell Edit is a mode that makes tabbing from one cell to another exit edit mode.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-single-cell-edit.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProSingleCellEdit.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Enter Next Row

Pressing kbd:[Enter] and kbd:[Shift+Enter] saves the changes and exists edit mode by default.

kbd:[Enter] and kbd:[Shift+Enter] can be made to focus the editable cell in the next and previous row, respectively, by using the Enter Next Row mode.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-enter-next-row.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProEnterNextRow.java[render,tags=snippet,indent=0,group=Java]
----
--

== Edit Column

Editing is enabled on a per column basis.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-edit-column.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProEditColumn.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Recommended Built-in Editors

Grid Pro features three recommended built-in editors: Text Field, Checkbox, and Select.

[cols=2, options=header]
|===
|Editor
|Usage Recommendation

|Text
|Editing basic text.

|Checkbox
|Editing boolean (binary) values.

|Select
|Selecting a single value from a set of options.
|===

Although Grid Pro can be configured to use any input field for editing, the built-in editors have better keyboard usability and rendering.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-editors.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProEditor.java[render,tags=snippet,indent=0,group=Java]
----
--

== Prevent Saving Changes

You can rollback changes when the entered input is incorrect or invalid.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-prevent-save.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProPreventSave.java[render,tags=snippet,indent=0,group=Java]
----
--

== Styling Editable Cells

Unless all columns are editable, apply styling to visually distinguish between editable and non-editable cells using the `editable-cell` part name selector.
For example, you can suffix read-only columns with “(read-only)” and/or editable columns with “(editable)”.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/gridpro/grid-pro-styling-editable-cells.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,css]
----
include::{root}/frontend/themes/docs/components/vaadin-grid-pro-editable-cells.css[tags=editable-style,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/gridpro/GridProStylingEditableCells.java[render,tags=snippet,indent=0,group=Java]
----

[source,css]
----
include::{root}/frontend/themes/docs/components/vaadin-grid-pro-editable-cells.css[tags=editable-style,indent=0,group=Java]
----
--

== Best Practises

=== Inline vs Non-Inline Editing

Inline editing is recommended when:

- the user typically needs to make a lot of small changes to different items
- quick editing is important

Non-inline editing is preferable

- there's a lot of columns/fields
- users typically need to edit only one item at a time
- adding new items is common (as you might want to have edit and create modes work the same way, and creating new items with inline editing is not recommended with Grid Pro).
- any of the editors need to be bigger than a simple field, such as a Text Area or multi-select field of any kind
- fields alone may be insufficient, for example when helpers, validation errors or other features are needed
- explicit save/cancel actions are beneficial, for example to prevent accidental edits

If your use case would benefit more from non-inline editing, consider using <<../crud#, CRUD>>.

== Related Components

|===
|Component | Usage recommendations

|<<../crud#, CRUD>>
|Component for creating, displaying, updating and deleting tabular data.

|<<../grid#, Grid>>
|Component for showing tabular data.

// |<<../tree-grid#, Tree Grid>>
// |Component for showing hierarchical data.

|===
