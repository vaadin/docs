---
title: Email Field
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-text-field/{moduleNpmVersion:vaadin-text-field}/#/elements/vaadin-email-field[Web Component] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/textfield/EmailField.html[Java]'
  - 'Source: https://github.com/vaadin/vaadin-text-field[Web Component] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-text-field-flow-parent[Java]'
---
= Email Field

// tag::description[]
Email Field, an extension of Text Field, only accepts email addresses as input.
// end::description[]
If the given address is invalid, the field is highlighted in red and an error message appears underneath the input.

[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/component/emailfield/email-field-basic.ts[preimport,hidden]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/emailfield/EmailFieldBasic.java[render,tags=snippet,indent=0]
----
--

Validity of the email addresses is checked according to the https://tools.ietf.org/html/rfc5322#[RFC 5322] standard, which includes the format for email addresses.

// TODO: restore after porting remaining docs
////
:component-name: Email Field
:text-field-features: true
include::../_shared.asciidoc[tag=field-features]
////

== Pattern for Additional Validation

The pattern attribute is an additional validation criterion that you can set if, for example, a specific domain is required.
The pattern is specified using regular expression.

The example below uses the pattern `.+@example\.com` and only accepts addresses in the example.com domain.

[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/component/emailfield/email-field-pattern.ts[preimport,hidden]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/emailfield/EmailFieldPattern.java[render,tags=snippet,indent=0]
----
--
