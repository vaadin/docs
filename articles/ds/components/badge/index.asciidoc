---
title: Badge
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-lumo-styles/blob/v{moduleNpmVersion:vaadin-lumo-styles}/badge.html[Source]
section-nav: incomplete
---

= Badge

// tag::description[]
Badges are coloured text elements containing small bits of information.
They are used for labelling content, displaying metadata and/or highlighting information.
// end::description[]

.Work In Progress
[NOTE]
The usage examples for this component are currently in progress.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

.Import styles
[NOTE]
Badge styles need to be imported separately.
The code examples show how to import them for Flow (Java) and/or Fusion (TypeScript).

== Label

Badges should contain a label.
Labels should be clear, concise, and written using sentence case.
Aim for 1 to 2 words.

== Icons

Badges can contain icons in addition to text.
Icons can be placed on either side of the text.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-icons.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeIcons.java[render,tags=snippet,indent=0,group=Java]
----
--

.Use icons sparingly
[NOTE]
The benefit of icons should be weighed against the visual noise it adds.

=== Icon-Only

Badges can also be used with icons without a label.
For accessibility, a tooltip and `aria-label` attribute is recommended to ensure all users can identify their meaning.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-icons-only.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeIconsOnly.java[render,tags=snippet,indent=0,group=Java]
----
--

Icon-only badges should primarily be used for extremely common recurring content with highly standardized, universally understood icons (such as checkmark for "_yes_"), and for content that is repeated for example in lists and tables.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-icons-only-table.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeIconsOnlyTable.java[render,tags=snippet,indent=0,group=Java]
----
--

== Theme Variants

Badge features theme variants for different sizes, colors, and shapes.
You can combine any theme variants together.

=== Size

Badges have two different sizes you can use: the default (normal) and `small`.
Use the `small` theme variant to make a badge smaller, for example when space is limited or for compact parts of the UI.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-size.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeSize.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Color

Badges have four different color variants: default, `success`, `error` and `contrast`.
The color variants can be paired with the `primary` theme variant for additional emphasis.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-color.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeColor.java[render,tags=snippet,indent=0,group=Java]
----
--

|===
|Variant |Theme name |Usage recommendations

|Normal
|
|Default style.
Recommended for informational messages.
Note that this style may be confused with a Button or link.

|Success
|`Success`
|Highlight positive outcomes, such as when a task or operation is completed.

|Error
|`Error`
|Use the error theme variant to communicate alerts, failures, or warnings.

|Contrast
|`Contrast`
|A high-contrast version that improves legibility and distinguishes the badge from the rest of the UI.
Recommended for neutral badges (that don’t communicate success or errors).

|Primary
|`Primary`
|Used for important information and/or to draw extra attention to your badge.
Can be combined with all other theme variants.

|===

.Accessibility
[NOTE]
Assistive technologies, such as screen readers, interpret badges solely based on their content.
Without proper context, they may end up confusing the user.
If you’re using colors and icons to convey information, provide the same info via `aria-label` to ensure screen readers can interpret the info.

=== Shape

Applying the `pill` theme variant produces a badge with rounded corners.
It can aid in making badges and buttons more distinct from one another.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-shape.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeShape.java[render,tags=snippet,indent=0,group=Java]
----
--

== Use Cases

=== Highlighting and Distinguishing Information

A typical use case for badges is to highlight an item’s status, for example in a Grid.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-highlight.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeHighlight.java[render,tags=snippet,indent=0,group=Java]
----
--

They’re also often used for displaying metadata tags.

=== Interactive Content

Badges can house interactive content such as Anchors and Buttons.
For example, Badges that highlight active filters might contain a "Clear" Button which removes the associated filter.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-interactive.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeInteractive.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Counter

Badges can be used as counters, for example, to show the number of unread/new messages, selection count, etc.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/badge/badge-counter.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/badge/BadgeCounter.java[render,tags=snippet,indent=0,group=Java]
----
--

Assistive technologies, such as screen readers, interpret badges solely based on their content.
Without proper context, they may end up confusing the user.
Consider the last item in the example above. For sighted users, it’s clear something requires their attention.
To make sure it’s obvious for people using screen readers, set the badge’s `aria-label` attribute.

== Best Practises

=== Badge vs Button

Badges and Buttons are similar in appearance.
This might lead users to think badges are interactive.

Placement, language, shape, and color can all help mitigate any confusion.
First, badges should not be labelled with active verbs.
They are not actions, but rather static text/content. Second, avoid placing badges directly next to Buttons, in particular if they’re using similar themes.
The `pill` theme variant may aid in making badges and Buttons more distinct from one another.
