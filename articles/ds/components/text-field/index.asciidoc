---
title: Text Field
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-text-field-flow}\[Flow {moduleMavenVersion:com.vaadin:vaadin-text-field-flow}], \
https://github.com/vaadin/vaadin-text-field/releases/tag/v{moduleNpmVersion:vaadin-text-field}\[Web Component {moduleNpmVersion:vaadin-text-field}]
---
= Text Field

// tag::description[]
Text Field allows the user to input and edit text.
Prefix and suffix components, such as icons, are also supported.
// end::description[]

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

:component-name: Text Field
include::../_shared-field-features.asciidoc[]

The features described here for Text Field are generally also available for <<related-components,other single-line text input components>>.

== Placeholder

A placeholder is a short description of the expected input value.
It is only shown when the text field is empty.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-placeholder.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldPlaceholder.java[render,tags=snippet,indent=0,group=Java]
----
--

Note that placeholders are not universal substitutes for labels, as they are only visible while the field is empty.
<<../input-fields#helper,Helpers>> are a better way to provide information that the user may need when filling in the field.
Unless marked as required, fields with placeholders also risk being inadvertently skipped when filling in a form.

Search fields are a good example of where placeholders can be used without a label, if they are prefixed or suffixed with a search icon or next to a search button.

Fields with placeholders, but without labels, should also provide an invisible label using the aria-label attribute to ensure screen readers can access it.

== Clear Button

The optional clear button clears the field’s current value.
It is hidden while the field is empty.
Clear buttons are useful for search and filter fields, where it is common for the user to want to clear the field value.
In data entry forms they are typically unnecessary, however.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-clear-button.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldClearButton.java[render,tags=snippet,indent=0,group=Java]
----
--

== Text Alignment

Three different text alignments are supported: left (default), center, and right.

Right aligned values are recommended for numerical values, when presented in vertical groups, as this makes it easier to interpret and compare values.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-text-alignment.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldTextAlignment.java[render,tags=snippet,indent=0,group=Java]
----
--

.Numeric fields
[NOTE]
<<../number-field#,Number Field>> is a better choice for certain numeric fields.

== Prefix & Suffix

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-prefix-suffix.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldPrefixSuffix.java[render,tags=snippet,indent=0,group=Java]
----
--

Prefixes and suffixes can be used to display currency, units, icons, etc.
Text or icons are recommended, but other elements can be used as well, if they fit into the field.

Prefixes and suffixes should not be used as a replacement for labels, except in cases like search fields, preferably combined with a <<placeholder,placeholder>>.

== Min & Max Input Length

These properties affect the smallest and largest number of characters a field accepts, by limiting text entry to the max length, and triggering a validation error if a shorter value shorter is entered.
They can be used to enforce specific value formats, or to cap the value to the longest length supported by the underlying database schema.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-min-max-input-length.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldMinMaxInputLength.java[render,tags=snippet,indent=0,group=Java]
----
--

In cases where the length requirements may not be clear to the user, it is recommended to provide this information, for example by using a <<../input-fields#helper,helper>>.

== Pattern

Defines the pattern (using regular expressions) that the input must adhere to, to prevent the user from entering an invalid value.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/textfield/text-field-pattern.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldPattern.java[render,tags=snippet,indent=0,group=Java]
----
--

The example above only allows input of numbers, parenthesis, dashes, and plus sign.
In cases where the format requirements may not be clear to the user, it is recommended to provide this information, for example by using a <<../input-fields#helper,helper>>.

== Small Variant

The _small_ theme variant can be used to make individual fields more compact.

[.example]
--
[source, html]
----
include::{root}/frontend/demo/component/textfield/text-field-small-variant.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/textfield/TextFieldSmallVariant.java[render,tags=snippet,indent=0,group=Java]
----
--

.Avoid overuse
[NOTE]
Size variants should be used sparingly.
See <<../../foundation/size-space#,Size and Space>> for details on how to change the default text field size.

== Autoselect

When a field is set to autoselect its contents are selected when the field is focused.
Use autoselect when the user might to want to replace the entire value rather than tweak it.

[options="header"]
|===
|Autoselect |Focused with |Result
|`ON`|Pointing device or keyboard navigation|Contents selected
|`OFF`|Pointing device|Cursor placed where clicked
|`OFF`|Keyboard navigation +
[guibutton]#Tab#|Cursor at the end of the input value
|`OFF`|Keyboard navigation +
[guibutton]#⇧# [guibutton]#Tab#|Contents selectedfootnote:[Consequent keyboard navigation result in the contents being selected until the selection is changed arrow navigation or mouse click.]
|===


== Related Components

Vaadin offers dedicated components for different types of input:

[cols="1,2"]
|===
|Component |Usage Recommendations

|<<../text-area#,Text Area>>|Free-form multi-line text input, for text longer than what can typically fit on a single line.

|<<../email-field#,Email Field>>|For email addresses.

|<<../number-field#,Number Field>>|Only allows numeric input.

|<<../password-field#,Password Field>>|For securely entering passwords.

|<<../combo-box#,Combo Box>>|For selecting from a predefined set of options.
Allows filtering and entering custom values.

|<<../date-picker#,Date Picker>>|Input field for entering or selecting a specific date.

|<<../time-picker#,Time Picker>>|Input field for entering or selecting a specific time.
|===
