// tag::field-features[]
== Common Input Field Features

{component-name} includes all
ifdef::text-field-features[]
Text Field and
endif::text-field-features[]
shared input field features.

ifdef::text-field-features[]
- xref:../text-field#[See Text Field features, role=skip-xref-check]
endif::text-field-features[]
- xref:../input-fields#[See shared input field features, role=skip-xref-check]
// end::field-features[]

// tag::merge-examples[]
++++
<style>
.example.merge,
.example.merge .render {
  margin-bottom: 0;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  overflow: visible;
}
.example.merge {
  display: flex;
  flex-direction: column;
}
.example.merge + .example,
.example.merge + .example .render {
  margin-top: 0;
  border-top-left-radius: 0;
  border-bottom-right-radius: 0;
}
.example.merge + .example .render {
  text-align: center;
  padding-top: 0;
  padding-bottom: var(--docs-space-m);
}
</style>
++++
// end::merge-examples[]

// tag::scaled-examples[]
.Scaled down examples
[IMPORTANT]
The examples on this page are scaled down so that their viewport-size dependant behavior can be demonstrated.
Some examples change their behavior also based on your browser viewport size.

ifndef::example-scale[]
// Just enough to keep "desktop" mode when docs are at max-width
:example-scale: 0.58;
endif::example-scale[]

[subs=attributes]
++++
<style>
/* absolute positioning is needed in Chrome for iframes
  to clip the contents inside the border-radius */

/* Aim for 16:9 aspect ratio for "desktop" examples */
.example:not(.mobile) .render {
  position: relative;
  padding: 0;
  padding-top: 52%;
  min-height: 0 !important;
  border: 1px solid var(--docs-divider-color-2);
  border-radius: 0;
  margin: var(--docs-space-s);
  margin-bottom: var(--docs-space-xs);
}

.example {
  --scale: {example-scale};
}

.example:not(.mobile) iframe {
  position: absolute;
  border-radius: 5px;
  transform: scale(var(--scale));
  max-width: calc(100% / var(--scale)) !important;
  width: calc(100% / var(--scale)) !important;
  height: calc(100% / var(--scale));
  transform-origin: 0 0;
  top: 0;
  left: 0;
}
</style>
++++
// end::scaled-examples[]

// tag::scaled-examples-responsive[]
ifndef::example-scale-1[]
:example-scale-1: 0.495;
endif::example-scale-1[]

ifndef::example-scale-2[]
:example-scale-2: 0.47;
endif::example-scale-2[]

ifndef::example-scale-3[]
:example-scale-3: 0.28;
endif::example-scale-3[]

[subs=attributes]
++++
<style>
/* Examples that want to keep stay in "desktop" mode on all viewport sizes */
@media (max-width: 1260px) {
  .example.desktop {
    --scale: {example-scale-1};
  }
}

@media (max-width: 960px) {
  .example.desktop {
    --scale: {example-scale-2};
  }
}

@media (max-width: 580px) {
  .example.desktop {
    --scale: {example-scale-3};
  }
}

/* Aim for "standard" portrait phone dimensions */
.example.mobile .render {
  min-height: 0 !important;
  width: 256px;
  height: 510px;
  padding: 0;
  margin: 0 auto;
  background: transparent;
}

.example.mobile iframe {
  position: absolute;
  width: 320px !important;
  height: 620px;
  overflow: hidden;
  transform: scale(0.75);
  transform-origin: 32px 120px;
  border-radius: 32px;
  box-shadow: 0 0 0 10px black, 0 3px 22px black;
}
</style>
++++
// end::scaled-examples-responsive[]
