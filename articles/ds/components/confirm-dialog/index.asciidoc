---
title: Confirm Dialog
layout: tabbed-page
tab-title: Usage
page-links:
  - https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-confirm-dialog-flow}[Flow {moduleMavenVersion:com.vaadin:vaadin-confirm-dialog-flow}]
  - https://github.com/vaadin/vaadin-confirm-dialog/releases/tag/v{moduleNpmVersion:vaadin-confirm-dialog}[Web Component {moduleNpmVersion:vaadin-confirm-dialog}]
section-nav: commercial
---

= Confirm Dialog
:experimental:

:commercial-feature-included: Confirm Dialog is
include::{root}/articles/_commercial-banner.asciidoc[opts=optional]

// tag::description[]
Confirm Dialog is a modal Dialog used to confirm user actions.
// end::description[]

// Custom style additions for the examples, that combine two renders together
include::../_shared.asciidoc[tag=merge-examples]

[.example.render-only.merge]
--
[source,typescript]
----
include::{root}/frontend/demo/component/confirmdialog/confirm-dialog-basic-preview.ts[render]
----
--

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/confirmdialog/confirm-dialog-basic.ts[render, tags=*, indent=0, group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/confirmdialog/ConfirmDialogBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

== Content

Confirm Dialog consists of:

* Title
* Message
* Footer
- “Cancel” button
- “Reject” button
- “Confirm” button

Each Confirm DIalog should have a title and/or message.
The “Confirm” Button is shown by default, while the two other Buttons are not (they must be explicitly enabled to be displayed).

== Title

Confirm Dialog's title should be brief but informative and written in sentence case.
It must explain the dialog's purpose and can be phrased as a statement or question.
Avoid ambiguous titles, such as “Are you sure?”.
Rich content, such as other components and elements, can also be used in the title.

== Messages

Confirm Dialog's message should contain any information a user might need to make an informed decision.

While it can contain any type of content, Confirm Dialog is not meant for collecting user input, except for a Checkbox used for remembering the user's choice.

== Buttons

Confirm Dialog's Buttons are customizable.
You can edit their labels and change their theme variants.

=== Confirm Button

The “Confirm” Button represents Confirm Dialog's primary action and is the only Button that is visible by default.
Every Dialog needs at least one Button.

As the name suggests, its default label is “Confirm”, but it can and should be relabeled based on the use case.

==== Usage Recommendations

* Use concise labels that explain the action, such as “Save” and “Delete”. Avoid ambiguous labels like “Yes” and “No”.
* For dangerous actions, such as those that lose or destroy data, use the Error theme variant.
* For simple acknowledgements, it is acceptable to use an “OK” label.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/confirmdialog/confirm-dialog-confirm-button.ts[render, tags=*, indent=0, group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/confirmdialog/ConfirmDialogConfirmButton.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Cancel Button

The “Cancel” Button is used in situations where the user must be able to cancel an action altogether, such as confirming irreversible actions like saving or deleting data.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/confirmdialog/confirm-dialog-cancel-button.ts[render, tags=*, indent=0, group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/confirmdialog/ConfirmDialogCancelButton.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Reject Button

The “Reject” Button differs from the “Cancel” Button in that it still moves the user forward in their workflow.

For example, if the user tries to leave a view containing unsaved changes, they are typically presented with three options: “Cancel”, “Discard” and “Save”.
“Cancel” allows the user to stay put and review their changes.
“Discard” (the “Reject” Button in this case) gets rid of the changes and the user leaves the view.

[.example]
--
[source,html]
----
include::{root}/frontend/demo/component/confirmdialog/confirm-dialog-reject-button.ts[render, tags=*, indent=0, group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/confirmdialog/ConfirmDialogRejectButton.java[render,tags=snippet,indent=0,group=Java]
----
--

== Closing

Confirm Dialog can be closed by clicking one of its buttons (all buttons close the dialog by default), or by pressing kbd:[Esc] (which triggers the action associated with the Cancel button if one exists). Closing on kbd:[Esc] can be disabled by setting the noCloseOnEsc property to false.

== Related Components

|===
|Component |Usage Recommendations

|<<../dialog#,Dialog>>|Component for presenting information and UI elements in an overlay.

|===
