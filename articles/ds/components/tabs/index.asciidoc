---
title: Tabs
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-tabs-flow}\[Flow {moduleMavenVersion:com.vaadin:vaadin-tabs-flow}], \
https://github.com/vaadin/vaadin-tabs/releases/tag/v{moduleNpmVersion:vaadin-tabs}\[Web Component {moduleNpmVersion:vaadin-tabs}]
---

= Tabs

// tag::description[]
Tabs are used to organize and group content into sections that the user can navigate between.
// end::description[]

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsBasic.java[render,tags=snippet,indent=0,group=Java]
----

--

Use Tabs when you want to allow in-place navigation within a certain part of the UI, instead of showing everything at once or forcing the user to navigate between different views.


== States

A Tab can be selected, unselected or disabled.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-states.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsStates.java[render,tags=snippet,indent=0,group=Java]
----

--

Disable a Tab to mark it as *unavailable*.
Disabled Tabs cannot be focused and may be invisible to assistive technologies like screen readers.

Disabling can be preferable to hiding an element to prevent changes in layout when the element’s visibility changes, and to make users aware of its existence even when unavailable.

== Orientation & Scrolling

Tabs support two different orientations: horizontal (default) and vertical.
Base the choice of orientation on the use case and the available space.

=== Horizontal

Horizontal tabs may be easier for users to understand and associate with their contents.
They are best suited for a small number of items, but provide scrolling on overflow.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-horizontal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsHorizontal.java[render,tags=snippet,indent=0,group=Java]
----

--

=== Vertical

Vertical tabs can be a better choice for a large number of items, as it’s easier for the user to scan a vertical list of options.
They may be somewhat less easy to understand and associate with their contents, however.
Vertical tabs also provide scrolling on overflow.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-vertical.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsVertical.java[render,tags=snippet,indent=0,group=Java]
----

--

=== Hide Scroll Buttons

Horizontal Tabs display scroll buttons to aid with scrolling when their contents overflow.
The buttons show that there are more tabs to either side.
Hide the buttons by applying the `hide-scroll-buttons` theme variant.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-hide-scroll-buttons.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsHideScrollButtons.java[render,tags=snippet,indent=0,group=Java]
----

--

[NOTE]
====
Hiding the scroll buttons is not recommended for UIs designed to be operated on non-touchscreen devices, as horizontal scrolling can be difficult without them.
====

== Icons and Other Tab Content

Tabs can contain more than just text.

=== Icons

Icons can be used to make tabs more prominent and easier to identify.
They can be added next to, or above the labels.
Horizontal Tabs generally work best with icons above the labels.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-icons-horizontal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsIconsHorizontal.java[render,tags=snippet,indent=0,group=Java]
----

--

Vertical Tabs generally work best with icons next to labels.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-icons-vertical.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsIconsVertical.java[render,tags=snippet,indent=0,group=Java]
----

--

=== Other Elements

Tabs can contain virtually any UI elements, such as badges indicating the number of items per tab.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-badges.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsBadges.java[render,tags=snippet,indent=0,group=Java]
----

--

== Theme Variants

=== Centered

Tabs are by default left-aligned.
They can be centered using the centered theme variant.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-theme-centered.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsThemeCentered.java[render,tags=snippet,indent=0,group=Java]
----

--

*Usage recommendations*

* Visual and/or stylistic preference
* Typically used for top-level navigation
* Use with caution; default left-aligned tabs are more discoverable.

=== Equal Width Tabs

Apply the `equal-width-tabs` theme variant to make each Tab share the available space equally.
Please note that this disables the possibility for scrolling as the content will never overflow.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-theme-equal-width.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsThemeEqualWidth.java[render,tags=snippet,indent=0,group=Java]
----

--

*Usage recommendations*

For a small number of tabs in a horizontally narrow space, such as:

* Tabbed sidebar
* Mobile (portrait) layouts

=== Minimal

A minimalistic style for Tabs.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-theme-minimal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsThemeMinimal.java[render,tags=snippet,indent=0,group=Java]
----

--

*Usage recommendations*

* To reduce visual clutter
* Use with caution, as this reduces the visual distinction for selected tabs to only color, which can be difficult to discern for many users.

=== Small

The `small` theme variant can be used to make the Tabs smaller.

[.example]
--

[source, html]
----
include::{root}/frontend/demo/component/tabs/tabs-theme-small.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsThemeSmall.java[render,tags=snippet,indent=0,group=Java]
----

--

*Usage recommendations*

* When space is limited

== Focus and Keyboard

Tab focus is rendered differently when focused by keyboard.

[.example.render-only]
--
[source, typescript]
----
include::{root}/frontend/demo/component/tabs/tabs-focus-ring.ts[render,tags=snippet,indent=0,group=TypeScript]
----
--

Once a tab is focused, arrow keys can be used to move the focus between tabs.
Press Enter or Space to select the focused tab.

== Common Cases

=== Switching Between Content

The most common use for Tabs is to switch between different sets of content within the same view.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/tabs/tabs-content.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsContent.java[render,tags=snippet,indent=0,group=Java]
----

--

=== Navigation

Tabs are often used for an application’s top-level navigation.
Anchor elements should be used inside the tabs to provide the navigation mechanism.

==== Desktop

On large viewports, either orientation option can be used.
Horizontal tabs work best for a small number of links.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/tabs/tabs-navigation-desktop-horizontal.ts[render,frame,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsNavigationDesktopHorizontal.java[render,frame,tags=snippet,indent=0,group=Java]
----

--

Vertical tabs work best for a large number of links.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/tabs/tabs-navigation-desktop-vertical.ts[render,frame,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsNavigationDesktopVertical.java[render,frame,tags=snippet,indent=0,group=Java]
----

--

==== Mobile

A common approach in mobile navigation is to place the navigation at the bottom of the screen, as this is more accessible, especially with one-handed use.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/tabs/tabs-navigation-mobile.ts[render,frame,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/tabs/TabsNavigationMobile.java[render,frame,tags=snippet,indent=0,group=Java]
----

--

== Related Components

|===
|Component |Usage recommendations

|<<../accordion#,Accordion>>|An accordion is a vertically stacked set of expandable panels.

|<<../details#,Details>>|The Details component is an expandable panel for showing and hiding content from the user to make the UI less crowded.

|===
