---
title: Map
page-links:
  - 'API: https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/map/Map.html[Java]'
  - 'Source: https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-map-flow-parent[Java]'
section-nav: commercial
---

= Map
:experimental:

:commercial-feature: Map
include::{articles}/_commercial-banner.asciidoc[opts=optional]

.Experimental Feature
[IMPORTANT]
====
Map is currently considered an experimental feature, which means that its behavior, API, and look and feel might still change.
In order to use Map, it must be explicitly enabled with a feature flag. See the <<Feature Flag>> section on how to do so.
====

// tag::description[]
Map is a component for displaying geographic maps from various sources.
// end::description[]
It supports multiple layers, tiled and full image sources, adding markers, and interaction through events.

[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/component/map/map-basic.ts[preimport,hidden]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/map/MapBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

.OpenStreetMap Usage
[NOTE]
====
By default, Map uses an OpenStreetMap source.
That makes it easy to get started with development.
However, for production use we encourage to use a commercial map service, or a self-hosted solution.
The OpenStreetMap tile servers are not intended to be used as map service for applications in production.
Please read and respect the https://operations.osmfoundation.org/policies/tiles/[OpenStreetMap tile usage policy^].
====

== Viewport

Map provides interactions, controls, as well as APIs, to control the viewport.
That includes setting the center, the zoom level, and the rotation.

By default, map coordinates, such as the view's center, are specified in https://en.wikipedia.org/wiki/Web_Mercator_projection[EPSG:3857 / Web Mercator Projection^], unless the map service uses a custom projection.
As coordinates are often provided as latitude and longitude, Map provides utilities for converting those into Web Mercator projection.

The zoom level is a decimal number that starts at zero as the most zoomed-out level, and then continually increases to zoom further in.
By default, the maximum zoom level is currently restricted to `28`.
In practical terms, the level of detail of the map data that a map service provides determines how useful higher zoom levels are.

[.example]
--
[source,typescript]
----
include::{root}/frontend/demo/component/map/map-viewport.ts[preimport,hidden]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/map/MapViewport.java[render,tags=snippet1,indent=0,group=Java]

...

include::{root}/src/main/java/com/vaadin/demo/component/map/MapViewport.java[render,tags=snippet2,indent=0,group=Java]
----
--

== Feature Flag

In order to use Map, it must be explicitly enabled with a feature flag. There are two methods to do so:

=== Using the Vaadin Devmode Tool

1. Click on the Vaadin Devmode Tool in your running application
2. Open the *Experimental Features* tab
3. Enable the *Map component (Pro)* feature
4. Restart the application

image::enable-feature-flag.png[]

=== Adding a Feature Flags Properties File

1. Create a `src/main/resources/vaadin-featureflags.properties` in your application folder
2. Add the following content: `com.vaadin.experimental.mapComponent=true`
3. Restart the application
