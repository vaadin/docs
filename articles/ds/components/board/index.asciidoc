---
title: Board
layout: tabbed-page
tab-title: Usage
page-links:
  - https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-board-flow}[Flow {moduleMavenVersion:com.vaadin:vaadin-board-flow}]
  - https://github.com/vaadin/vaadin-board/releases/tag/v{moduleNpmVersion:vaadin-board}[Web Component {moduleNpmVersion:vaadin-board}]
section-nav: commercial
---

= Board

:commercial-feature-included: Board is
include::{root}/articles/_commercial-banner.asciidoc[opts=optional]

// tag::description[]
Board is a powerful and easy to use layout element for building responsive views.
It reorders the components inside it on different screen sizes while maximising the use of available space.
// end::description[]

.Work In Progress
[NOTE]
====
The Java examples for this component are currently in progress.
In the meantime, you can view the previous examples.

[.buttons]
- https://vaadin.com/components/vaadin-board/java-examples[Java Component Examples]
====

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/board/board-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-chart.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-indicator.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-border.css.ts[group=TypeScript]
----

//[source,java]
//----
//include::{root}/src/main/java/com/vaadin/demo/component/board/BoardBasic.java[render,tags=snippet,indent=0,group=Java]
//----
--

Use Board to create responsive views and dashboards that work on any screen size.

== Responsive

Board is responsive by default meaning it doesn't require any custom development.
Its layout is automatically optimized and adjusted based on the screen size, ensuring the components utilise all available space.

== Rows & Columns

Board is made up of rows.
Each row supports up to four columns and can contain a up to four components.

=== Nested Rows

Rows can be nested for more fine grained control of how certain areas of the layout behave on resize and how they are rendered.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/board/board-nested.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-statistics.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-indicator.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-breakpoint-default.css.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-border.css.ts[group=TypeScript]
----

//[source,java]
//----
//include::{root}/src/main/java/com/vaadin/demo/component/board/BoardNested.java[render,tags=snippet,indent=0,group=Java]
//----
--

=== Column Wrapping

Columns automatically wrap onto new lines as the viewport narrows.
The wrapping behaviour for a row with four columns and four components is shown below.

[IMPORTANT]
Use the draggable split handle to resize the layout and see how the columns wrap.


[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/board/board-column-wrapping.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-breakpoint-default.css.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-cell-default.css.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-color-default.css.ts[group=TypeScript]
----

//[source,java]
//----
//include::{root}/src/main/java/com/vaadin/demo/component/board/BoardColumnWrapping.java[render,tags=snippet,indent=0,group=Java]
//----
--

=== Column Span

By default, components in a row shares the space equally.
A component can stretch across two or three columns by setting its column span.

The possible combinations are shown below:

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/board/board-column-span.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-breakpoint-default.css.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-cell-default.css.ts[group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-color-default.css.ts[group=TypeScript]
----

//[source,java]
//----
//include::{root}/src/main/java/com/vaadin/demo/component/board/BoardColumnSpan.java[render,tags=snippet,indent=0,group=Java]
//----
--

== Breakpoints

Board adjusts its layout based on the viewport width.
The following three viewport widths, called breakpoints, trigger a layout change:

|===
| Breakpoint | Viewport width | Max number of columns

| large
| ≥ 960 pixels
| 4

| medium
| 600–959 pixels
| 2 or 3footnote:[A row with three equal-width components won't wrap until the small breakpoint.]

| small
| < 600 pixels
| 1
|===

The breakpoints can be customized by overriding the CSS custom properties named `--vaadin-board-width-small` and `--vaadin-board-width-medium`.

=== Breakpoint-Specific Styling

You can apply different styles for each breakpoint, for example to change the font size and space between components.

[IMPORTANT]
Use the draggable split handle to resize the layout and see how the board styling changes on different breakpoints.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/board/board-breakpoints.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,typescript]
----
include::{root}/frontend/demo/component/board/example-cell-default.css.ts[group=TypeScript]
----

//[source,java]
//----
//include::{root}/src/main/java/com/vaadin/demo/component/board/BoardBreakpoints.java[render,tags=snippet,indent=0,group=Java]
//----
--
