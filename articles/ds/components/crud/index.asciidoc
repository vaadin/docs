---
title: CRUD
page-links:
  - 'API: https://cdn.vaadin.com/vaadin-web-components/{moduleNpmVersion:vaadin-crud}/#/elements/vaadin-crud[TypeScript] / https://vaadin.com/api/platform/{moduleMavenVersion:com.vaadin:vaadin}/com/vaadin/flow/component/crud/Crud.html[Java]'
  - 'Source: https://github.com/vaadin/web-components/tree/v{moduleNpmVersion:vaadin-crud}/packages/vaadin-crud[TypeScript] / https://github.com/vaadin/flow-components/tree/{moduleMavenVersion:com.vaadin:vaadin}/vaadin-crud-flow-parent[Java]'
section-nav: commercial
---

= CRUD

:commercial-feature: CRUD
include::{articles}/_commercial-banner.asciidoc[opts=optional]

// tag::description[]
CRUD is a component for managing a dataset.
It allows for easy displaying, editing, creating, and deleting of items.
// end::description[]

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudBasic.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

== Columns

CRUD automatically generates columns for each field in the provided dataset.
You can add columns and configure or remove existing ones.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-columns.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudColumns.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

== Editor

Data is edited using CRUD's editor UI.

=== Opening the Editor

By default, the editor is opened by clicking the edit Button in the last column, but this button column can be removed in favor of another way to engage the editor.
For example, you can have it open using double click:

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-open-editor.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudOpenEditor.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

=== Editor Position

The editor can be positioned in an overlay (default), on the side or at the bottom.

==== Overlay (Default)

The overlay position renders the editor in a modal overlay. Overlays are not constrained to the CRUD's size which makes them ideal for complex forms.
However, they block the user from viewing and interacting with the Grid beneath.

==== Aside

The `aside` position displays the editor as an overlay next to the grid.
Use this position when there's sufficient horizontal space to accommodate both the grid and the editor, and it's beneficial for the user to be able to view and interact with the grid while the editor is open.
Aside positioning is also a good fit for <<../form-layout#,single-column forms>>.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-editor-aside.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudEditorAside.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

.Grid Width
[NOTE]
The opening and closing of an aside editor affects the grid's width.
Fixed width columns are recommended to prevent them from resizing each time.

==== Bottom

The bottom position can be useful when the user needs to see as many columns in the grid as possible while editing, when horizontal space is limited, or when a wider editor form is desired.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-editor-bottom.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudEditorBottom.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

When using a bottom positioned editor, make sure there's enough vertical space to comfortably fit both the grid and the editor.
Also note that a bottom positioned editor is a bad fit for longer forms.

.Small viewports
[NOTE]
On small viewports, like mobile phones, the editor always opens up as a full-screen overlay, regardless of this configuration.

=== Editor Content

The editor's content is fully configurable, except for the header and footer.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-editor-content.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudEditorContent.java[render,tags=snippet1,indent=0,group=Java]

...

include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudEditorContent.java[render,tags=snippet2,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

==== Editor Actions

.The editor contains three Buttons:
* *“Delete”* shows a confirmation dialog asking the user to verify whether they wish to delete the item
* *“Cancel”* closes the editor unless there are unsaved changes, in which case a confirmation dialog is shown and the user can either discard the changes or go back to editing
* *“Save”* saves the changes and closes the editor (disabled until a change is made)

== Grid Replacement

CRUD's default Grid is replaceable.
This is useful when you wish to customise the Grid, for example, to place the edit Button in the first column.
See <<../grid#,Grid documentation>> for details on configuring grids.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-grid-replacement.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudGridReplacement.java[render,tags=snippet1,indent=0,group=Java]

...

include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudGridReplacement.java[render,tags=snippet2,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

.Edit Column
[NOTE]
You need to explicitly add an edit column to the replacement Grid in order to edit items.
In addition, Grid does not have sorting and filtering enabled by default.

== Toolbar

Creating new items is done via the “New item” Button in CRUD's toolbar.
Both the toolbar and its Button are customizable.
For example, you can use the toolbar to display statistics such as the dataset's size or the number of search results.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-toolbar.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudToolbar.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

== Sorting & Filtering

Sorting and filtering can be disabled.
For more information about sorting and filtering, please see the basic <<../grid#,Grid documentation>>.

[.example]
--

[source,html]
----
include::{root}/frontend/demo/component/crud/crud-sorting-filtering.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudSortingFiltering.java[render,tags=snippet1,indent=0,group=Java]

...

include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudSortingFiltering.java[render,tags=snippet2,indent=0,group=Java]

...

include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudSortingFiltering.java[render,tags=snippet3,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

== Localization

CRUD supports full localization through customizable labels for its buttons and the editor's title.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/crud/crud-localization.ts[render,tags=snippet;snippethtml,indent=0,group=TypeScript]
----

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/CrudLocalization.java[render,tags=snippet,indent=0,group=Java]
----
[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/component/crud/PersonDataProvider.java[render,indent=0,group=Java]
----
--

== Related Components

|===
|Component |Usage recommendations

|<<../grid-pro#,Grid Pro>>
|Component for showing and editing tabular data.

|<<../grid#,Grid>>
|Component for showing tabular data.

|<<../tree-grid#,Tree Grid>>
|Component for showing hierarchical data.
|===
