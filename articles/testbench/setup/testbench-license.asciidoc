---
title: Installing Vaadin TestBench License
order: 2
layout: page
---

[[testbench.license]]
= Installing Vaadin TestBench License

[[testbench.license.local]]
== Installing License Key

Before running tests, you need to install a license key.
You can purchase Vaadin TestBench or obtain a free trial key from the
link:https://vaadin.com/directory#addon/vaadin-testbench[Vaadin TestBench
download page] in Vaadin Directory.
You need to register in Vaadin Directory to obtain the key.

To install the license key on a development workstation, you can copy and paste it verbatim to a [filename]#.vaadin.testbench.developer.license# file in your home directory.

For example, in Linux and OSÂ X:
[subs="normal"]
----
[prompt]#$# [command]#echo# "[replaceable]##L1cen5e-c0de##" &gt; [parameter]#~/.vaadin.testbench.developer.license#
----

In Windows
[subs="normal"]
----
[prompt]#$# [command]#echo# [replaceable]##L1cen5e-c0de## &gt; [parameter]#%HOMEPATH%\.vaadin.testbench.developer.license#
----

If you are behind a proxy server, see <<testbench.license.proxies>>.

[[testbench.license.variable]]
== Using System Property
You can also pass the key as a system property to the Java application running
the tests, usually with a [literal]#++-D++# option on the command-line:

[subs="normal"]
----
[prompt]#$# [command]#java# -D[parameter]##vaadin.testbench.developer.license##=[replaceable]##L1cen5e-c0de## ...
----
How you actually pass the parameter to your test runner depends on the actual test execution environment.
Below are listed a few typical environments:

Apache Maven:: If running tests with Apache Maven, you can pass the license key with a [literal]#++-D++# parameter to Maven:


+
[subs="normal"]
----
[prompt]#$# [command]#mvn# -D[parameter]##vaadin.testbench.developer.license##=[replaceable]##L1cen5e-c0de## verify
----

Eclipse IDE:: To install the license key for all projects, select "Window > Preferences" and navigate to the "Java > Installed JREs" section.
Select the JRE version that you use for the application and click [guibutton]#Edit#.
In the [guilabel]#Default VM arguments#, give the [parameter]#-D# expression as shown above.

+
For a single project, create a new JUnit launch configuration in "Run > Run
configurations".
Select [guilabel]#JUnit# and click [guibutton]#New launch configuration#.
If you have already ran JUnit in the project, the launch configuration already exists.
Select JUnit 4 if not selected automatically.
Go to [guilabel]#Arguments# tab and give the [parameter]#-D# expression in the [guilabel]#VM arguments# field.
Click [guibutton]#Run# to run the tests immediately or [guibutton]#Close# to just save the settings.

Apache Ant:: If running tests with the [literal]#++<junit>++# task in Apache Ant, as described in <<dummy/../../environment/testbench-execution#testbench.execution.ant,"Running Tests with Ant">>, you can pass the key as follows:

+
[subs="normal"]
----
&lt;sysproperty key="vaadin.testbench.developer.license"
             value="**L1cen5e-c0de**"/&gt;
----
+
However, you should never store license keys in a source repository, so if the Ant script is stored in a source repository, you should pass the license key to Ant as a property that you then use in the script for the value argument of the [literal]#++<sysproperty>++# as follows:


+
[subs="normal"]
----
&lt;sysproperty key="vaadin.testbench.developer.license"
    value="**${vaadin.testbench.developer.license}**"/&gt;
----
+
When invoking Ant from the command-line, you can pass the property with a [parameter]#-D# parameter to Ant.

TeamCity:: In TeamCity, you can pass the license key to build runners as a system property in the build configuration.
However, this only passes it to a runner.
As described above, Maven passes the parameter as is to JUnit, but Ant does not do so implicitly, so you need to forward it explicitly as described earlier.



ifdef::web[]
See link:https://vaadin.com/docs/v8/framework/addons/addons-cval[the CVAL
license key installation instructions] for more details.
endif::web[]

[[testbench.license.proxies]]
== Configuring License Check Through Proxy
TestBench requires a network access to the license server. If you are behind a proxy server, you have to configure Java Virtual Machine proxy settings with the following system properties:

* https.proxyHost
* https.proxyPort
* http.nonProxyHosts

How the system properties are passed depends on the Java application you are using. Maven Failsafe and Surefire plugins require you to pass the parameters in plugin configuration for the forked VM.

[subs="normal"]
----
&lt;configuration&gt;
    &lt;argLine&gt;-Dhttps.proxyHost=**proxy.example.com** -Dhttps.proxyPort=**443** -Dhttp.nonProxyHosts="**localhost|host.example.com**"&lt;/argLine&gt;
&lt;/configuration&gt;
----
