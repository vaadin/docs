---
title: IntelliJ IDEA Editor Settings
order: 10
layout: page
---

:experimental:
:commandkey: &#8984;

= IntelliJ IDEA Editor Settings

This page describes the noticeable changes made to the default code formatting settings in IntelliJ IDEA.
This is also a chance to review some of these changes and tweak them if necessary.
None of these are essential for a pull request, but they all help.
They can also be added after the original pull request but before a merge.

== General

- Line length is 80 characters
- Use spaces instead of tabs for indentation
- Use UTF-8 encoding
- Use unix-style line endings (`\n`)

== Code Conventions

. Install the [guilabel]#Eclipse Code Formatter# plugin, then restart IDEA
. Open Settings (kbd:[Ctrl + Alt + S] or kbd:[{commandkey} + ,])
. On the menu:Other Settings[Eclipse Code Formatter] page
.. Check [guilabel]#Use the Eclipse code formatter#
.. In the [guilabel]#Supported file types# section, check [guilabel]#Enable Java#
.. In [guilabel]#Eclipse Java Formatter config file#, browse to your local copy of link:https://github.com/vaadin/flow/blob/master/eclipse/VaadinJavaConventions.xml[VaadinJavaConventions.xml]
. Go to menu:Editor[Code Style], and set [guilabel]#Hard wrap at (columns)# to *80*

== Imports

. Open Settings (kbd:[Ctrl + Alt + S] or kbd:[{commandkey} + ,])
. Go to menu:Editor[General > Auto Import] and un-check [guilabel]#Optimize imports on the fly#
. Go to menu:Editor[Code Style > Java] and on the [guilabel]#Imports# tab
.. Make sure that [guilabel]#Use single class import# is checked
.. Set both [guilabel]#Class count to use import with '+++*+++'# and [guilabel]#Names count to use static import with '+++*+++'# to *99*
.. On the [guilabel]#Import Layout# pane, make sure that [guilabel]#Layout static imports separately# is checked
.. Remove all the packages in the list [guilabel]#Packages to Use Import with '+++*+++'#
.. Organize Java imports to comply to the convention defined below:
+
[source,java]
----
import javax.*
import java.*
<blank line>
import all other imports
<blank line>
import com.google.gwt.*
import com.vaadin.*
<blank line>
import elemental.*
import static all other imports
----

== Copyright

. Open Settings (kbd:[Ctrl + Alt + S] or kbd:[{commandkey} + ,])
. Go to menu:Editor[Copyright > Copyright Profiles] and create a new profile named *Vaadin*, with the copyright text as defined below:
+
----
Copyright 2000-$today.year Vaadin Ltd.

Licensed under the Apache License, Version 2.0 (the "License"); you may not
use this file except in compliance with the License. You may obtain a copy of
the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
License for the specific language governing permissions and limitations under
the License.
----

. Go one level higher, to menu:Editor[Copyright], and set [guilabel]#Default project copyright# to the *Vaadin* profile you just created

== Known Problems in Configuration

IntelliJ IDEA has a known problem with link:https://youtrack.jetbrains.com/issue/IDEA-192220[importing sources of other module as resources].
Which is the case with the Flow project where `flow-client` has `flow-server` sources as a resource.

The fix for this is to during development time comment out the `flow-server` resource for the `flow-client/pom.xml`.

.Comment out the flow-server resource
[source,xml]
----
<resource><directory>../flow-server/src/main/java</directory></resource>
----

.Build flow-client package
[NOTE]
To build the `flow-client` package remember to un-comment the resource.
