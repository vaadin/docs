---
title: Client-Side Exceptions
order: 70
layout: page
---

= Client-Side Exceptions

An exception can occur when the front end receives a response from the back end.
If the status code of the response is from https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200[200 OK], Fusion throws an `EndpointException` on the client side.

The back end returns [200 OK] code when it is able to correctly process the request: deserialize the method body, find and execute the particular method in the endpoint, and serialize its return value into a response.

If anything goes wrong during this process, the response will have one the following return codes:

* https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400[400 Bad Request]
** If the corresponding method on the backend part was found for the request, but the method parameters do not match
the method body: their number or types do not map the request method json,
see <<type-conversion#,Type conversion between JavaScript and Java>> for more details about the type conversion rules.

** When a Java method call throws a `com.vaadin.flow.server.connect.exception.EndpointException` or its subclass.
This kind of exceptions is a special use case that allows to raise the exception on a client side part from
a backend side with the particular exception message and the details.

* https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404[404 Not Found]
** If the request contains an endpoint or a method name that is not present on the backend.

* https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500[500 Internal Server Error]
** When an endpoint Java method invocation fails by some reason, for instance, the method throws an exception,
that is not the EndpointException and does not inherit it.

** The Vaadin server is not able to process a request because of some technical reasons.
