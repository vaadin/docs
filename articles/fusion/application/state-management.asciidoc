---
title: State Management with MobX
order: 80
layout: page
---

= State Management With MobX

Application state can be managed in many different ways.
In simple applications you may not need an explicit state management strategy.
But when your application grows to have a lot of views or complex UI
where the same data needs to be displayed in multiple places
or when there are many dependencies between UI controls
it may become difficult to keep the application in a consistent state
when the user interacts with the application.
If you don't have a good state management strategy
it can be easy to introduce new bugs when changing application logic.

This is where a state management library like link:https://mobx.js.org/[MobX] can help
and make the application easier to maintain and extend.
Here we concentrate on an approach to store all shared frontend state in a central MobX state store
which will be the single source of truth for the application state.
Then it's easy to display the state data (or anything that can be derived from it) anywhere in the UI so that the data is automatically updated everywhere where it is displayed whenever the data is updated in the state store.

== Using MobX in Your Application

As a starting point you can generate a project at link:https://start.vaadin.com/[start.vaadin.com].
Make sure to select Vaadin 18 or later with TypeScript UI from the Application settings tab before clicking [guibutton]#Download#.

=== Installing MobX

[role="deprecated:com.vaadin:vaadin@V19"]
==== Vaadin 18

```
npx -p pnpm@4.5.0 pnpm --shamefully-hoist i mobx @adobe/lit-mobx
```

[role="since:com.vaadin:vaadin@V19"]
==== Vaadin 19+

```
npx pnpm i mobx @adobe/lit-mobx
```

=== Creating a data store

TODO: how to change the code and a minimal example of how to create a state store and use it in a UI component

.What is a data store?
[NOTE]
====
"The main responsibility of stores is to move logic and state out of your components into a standalone testable unit." - link:https://mobx.js.org/defining-data-stores.html#stores[Defining data stores] in MobX documentation.
====

== External Links and References

- link:https://mobx.js.org/[MobX documentation]

- Vaadin Tips video: link:https://www.youtube.com/watch?v=MNxnZ8pzSBo[LitElement state management with MobX in a Vaadin Fusion project]

- Example project mentioned in the video above: https://github.com/marcushellberg/vaadin-fusion-mobx