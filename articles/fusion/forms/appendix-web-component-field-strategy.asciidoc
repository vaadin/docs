---
title: Using a Field Web Component
order: 100
layout: page
---


= Binding a Field Web Component

While Vaadin Components are supported out-of-the-box, the client-side <<overview#,Form binder>> can be configured to support any web component.
This article explains how to configure the binder for using a custom text-field web component.

== Example of a Web Component

Let us consider the following LitElement component for using in form binding:

.Example web component field

[source,typescript]
----
include::{root}/frontend/demo/fusion/forms/custom-text-field.ts[]
----

== Defining a Field Strategy

The first step towards using a web component as a field is to define a field strategy.

You need to import and create a subclass of `AbstractFieldStrategy`, as in the example below:

.Example field strategy

[source,typescript]
----
include::{root}/frontend/demo/fusion/forms/custom-field-strategy.ts[]
----

== Using the Field Strategy

Subclass the binder and override the `getFieldStrategy(element)` method to use a custom field strategy for the `custom-text-field` component:

.Using a custom field strategy in the binder

[source,typescript]
----
include::{root}/frontend/demo/fusion/forms/custom-binder.ts[]
----

.Using a field web component in a form
[source,typescript]
----
include::{root}/frontend/demo/fusion/forms/custom-form.ts[]
----
