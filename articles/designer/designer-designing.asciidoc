---
title: Designing
order: 6
layout: page
---

[[designer.designing]]
= Designing

To add a component to your design, drag it from the component
[guilabel]#Palette# view and drop it in the desired location - either in the canvas
area or in the hierarchical [guilabel]#Outline# view. Dropping in the desired
location on the canvas is the most common approach, but in some situations
(especially with complex, deeply nested component hierarchies) dropping on the
[guilabel]#Outline# view gives more control.

[[designer.designing.layouts]]
== About Layouts

Your designs should usually start with some sort of layout as the root
component, or otherwise you are limited to a one-component design. You can also
use a component that is not strictly a layout, but can still contain one (or
several) components (or layouts) - this includes [classname]#TabSheet#,
[classname]#Accordion#, [classname]#Panel#, etc.

There are three main types of layouts: ordered, absolute, and CSS.

Ordered layouts:: Ordered layouts arrange the contained components in some ordered fashion, for
instance vertically or horizontally with uniform spacing. This makes it easy to
align components, and achieve a consistent look.

+
[classname]#VerticalLayout#, [classname]#HorizontalLayout#, and
[classname]#FormLayout# fall into this category.

+
When you drop a component on a ordered layout, it will end up in a position
determined by the layout, not exactly where you dropped it. Drop indicators help
you estimate where the component will end up.

[classname]#AbsoluteLayout#:: [classname]#AbsoluteLayout# allows free positioning of components, and supports anchoring
freely in all directions. It is a powerful layout, but can be more challenging
to use. You can use rulers, grids, guides, and snapping to aid your work.

+
[classname]#AbsoluteLayout# allows you to position components freely - a component is placed
where you drop it. However, if you anchor the component elsewhere than to
top/left, or use relative positioning, it might move when you change the size of
the layout.

[classname]#CssLayout#:: As the name indicates, [classname]#CssLayout# uses CSS to position components.
It is very flexible, and with appropriate CSS, it can be used to achieve
responsive layouts and a consistent look and feel. However, it requires CSS â€“
either pre-made and copied to your theme, or hand-crafted by you.


[[designer.designing.starting]]
== Starting from Blank

When you add the first layout to your blank canvas, it will be sized 100% x
100%, filling the whole viewport. Whether or not this is a good idea depends on
your design. For many UIs having a [classname]#VerticalLayout# as root, it makes
sense to have the layout 100% wide, but __auto__ high. This will make the layout
grow vertically as you add components, instead of splitting the available
vertical space evenly between components.

Most UIs will not look good without margin and spacing. You can enable them for
ordered layouts in the [guilabel]#Properties# view.
<<figure.designer.designing.starting.spacing>> illustrates the same layout
without margin or spacing, with margin, and with spacing.

[[figure.designer.designing.starting.spacing]]
.Effects of Margin and Spacing
image::img/designer-marginspacing.png[width=70%, scaledwidth=100%]

The _info bar_, illustrated in <<figure.designer.designing.starting.infobar>>,
lets you quickly toggle between __auto__ sizing and 100%. You can try out the
effect of these changes by grabbing just outside the viewport (canvas) corner
and resizing it (add a few components to your layout first).

[[figure.designer.designing.starting.infobar]]
.Info Bar for Quick Adjustments
image::img/designer-infobar.png[width=30%, scaledwidth=50%]


[[designer.designing.templates]]
== Using Templates

Templates provide a starting-point for your design - add, remove, and modify the
created design as you see fit. You can pick the template for your design when
you create the design using the New Design wizard of your IDE. See 
<<designer-getting-started#designer.getting-started.design, Creating a Design>>.

To learn how to create templates of your own or how to import templates others 
have made, see <<designer-templates#designer.templates, Templates>>.

[[designer.designing.adding]]
== Adding Components

Components can be added by dragging from the [guilabel]#Palette# view, either to the canvas or
to the [guilabel]#Outline# view.

[[figure.designer.designing.palette]]
.Component Palette (Alternate Layouts)
image::img/designer-palette.png[width=80%, scaledwidth=100%]

The component [guilabel]#Palette# view has a search field, and also two modes: list and tile. In
the list mode, you can see the component name next to the icon, which is
convenient at first. The tile mode lets you see all components at once, which
will speed up your work quite a bit. It requires a little patience, but is
really worth your while in the long run. The component name can also be seen
when hovering on the icon.

The component you add will be selected in the editor view, and you can
immediately edit its properties, such as the caption.

[[designer.designing.properties]]
== Editing Properties

You can edit component properties in the [guilabel]#Properties# view. It is a
good idea to give components at least a [guilabel]#name# if they are to be used
from Java code to add logic (such as click listeners for buttons). Generally,
this is needed for most controls, but not for most layouts.

[[figure.designer.designing.adding.properties]]
.Property View
image::img/designer-properties.png[width=60%, scaledwidth=80%]

In addition to exporting the named components to Java, you will end up with
things like [literal]#++saveButton++# and [literal]#++emailField++# in your
[guilabel]#Outline# view, which will help you keep track of your components.

Note the ellipsis ([guibutton]#...#) button next to most properties - in many
cases a more helpful editor is presented when you click it.

[[figure.designer.designing.adding.properties.editor]]
.A Property Editor
image::img/designer-propertyeditor.png[width=80%, scaledwidth=100%]

[[designer.designing.properties.resources]]
=== Using Resources

Some properties refer to a resource object that should be loaded.
This includes the _icon_ property, and the _source_ property for some components.
In Vaadin there are multiple types of resources, as described in
<<dummy/../../../v8/framework/application/application-resources#application.resources, "Images and Other Resources">>.
They are represented by a URI in the Designer UI and in the declarative format used by Designer.

[cols="3*", options="header"]
.Different Resource types
|===
|Resource Name
|URI Format
|Description

|[classname]#ExternalResource#
|http[s]:// ftp[s]://
|Browser loads the resource from the given address.

|[classname]#ThemeResource#
|theme://
|The resource is loaded from the application theme folder.

|[classname]#FileResource#
|file://
|The resource is loaded from the server filesystem.

|[classname]#FontIcon#
|fonticon://
|Font icon path. Only for the [classname]#Icon# component.

|[classname]#ClassResource#
|N/A
|Not supported by the declarative format.

|[classname]#StreamResource#
|N/A
|Not supported by the declarative format.
|===

Components that have a _source_ property include [classname]#Audio#, [classname]#Flash#, [classname]#Image#,
[classname]#Link# and [classname]#Video#.

[[figure.designer.designing.using.resources.image.icon]]
.An Image component with a Font Icon
image::img/designer-image-with-icon.png[width=80%, scaledwidth=100%]


[[designer.designing.wrapping]]
=== Wrapping a Component

Once in a while, you may need to wrap a component with a layout, in order to
achieve the desired result (quite often injecting a
[classname]#HorizontalLayout# into a [classname]#VerticalLayout#, or vice
versa). You can achieve this by right-clicking the component in the
[guilabel]#Outline# view, and choosing [menuchoice]#Wrap with# in the context menu.

[[figure.designer.designing.wrapping]]
.Wrapping a Component
image::img/designer-wrapping.png[width=50%, scaledwidth=75%]


[[designer.designing.replacewith]]
=== Replacing a Layout

In many cases a change in orientation or other rearrangement of components is
required. Replacing the layout that contains those components is a convenient 
way to achieve that. To replace a layout with another, click on the layout to be
replaced in the [guilabel]#Outline# view, choose [menuchoice]#Replace with...# 
in the context menu and select a layout to replace the current one with from the 
list of layouts that appears.

[[figure.designer.designing.replacewith]]
.Replacing a Layout
image::img/designer-replacewith.png[width=50%, scaledwidth=75%]

Note that usual layout restrictions apply. For example if you replace a 
[classname]#VerticalLayout# with a [classname]#Panel#
the leftover components will be dropped. Undo and redo work as usual, so you
never lose your work.

[[designer.designing.previewing]]
== Previewing

While creating a design, it is convenient to preview how the UI will behave in
different sizes and on different devices. There are a number of features geared
for this.

[[designer.designing.previewing.resize]]
=== Resizing Viewport and Presets

The WYSIWYG canvas area also doubles as viewport. By resizing it, you can
preview how your design will behave in different sizes, just as if it was
displayed in a browser window that is being resized, or dropped in a [classname]#Panel#
of a specific size.

You can manually resize the viewport by grabbing just outside of an edge or
corner of the viewport, and dragging to the desired size. When you resize the
viewport, you can see that the viewport control on the toolbar changes to
indicate the current size.

By typing in the viewport control, you can also input a specific size (such as "
[literal]#++200 x 200++#"), or open it up to reveal size presets. Choose a
preset, such as [guilabel]#Phone# to instantly preview the design on that size.

[[figure.designer.designing.previewing.resize]]
.Viewport Preset Sizes
image::img/designer-resizing.png[width=40%, scaledwidth=60%]

You can also add your own presets - for instance known portlet or dashboard tile
sizes, or other specific sizes you want to target.

To preview the design in the other orientation (portrait vs. landscape), press
the icon right of the viewport size control.


[[designer.designing.previewing.quick]]
=== Quick preview

The [guilabel]#Quick preview# is one of the edit-modes available to the right in
the toolbar (the other modes being [guilabel]#Design# and [guilabel]#Code#). In
this mode, all designing tools and indicators are removed from the UI, and you
can interact with components - type text, open dropdowns, check boxes, tab
between fields, and so on. It allows you to quickly get a feel for (for
instance) how a form will work when filling it in. Logic is still not run (hence
"quick"), so no real data is shown and, for example, buttons do nothing.


[[designer.designing.previewing.external]]
=== External Preview

The external preview popup shows a QR code and its associated URL. By browsing
to the URL with and browser or device that can access your computer (that is, on
the same LAN), you can instantly see the design and interact with it. This view
has no extra designer-specific controls or viewports added, instead it just
shows the design as-is; the browser is the viewport.

[[figure.designer.designing.previewing.external]]
.External Preview
image::img/designer-preview-external.png[width=70%, scaledwidth=100%]

External preview allows multiple browsers and devices to be connected at once,
and they are all updated live as you change the design in Eclipse. There is an
indicator in the toolbar when the design is viewed externally.

[[figure.designer.designing.previewing.external.indicator]]
.Indicator for External Preview
image::img/designer-preview-external-indicator.png[width=40%, scaledwidth=50%]

This is an awesome way to instantly preview results on multiple devices and
browsers, or to show off a design and collaborate on it - for instance in a
meeting setting.
