---
title: Scroller
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-flow-components/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-ordered-layout-flow}\[Flow {moduleMavenVersion:com.vaadin:vaadin-ordered-layout-flow}], \
https://github.com/vaadin/vaadin-ordered-layout/releases/tag/v{moduleNpmVersion:vaadin-ordered-layout}\[Web Component {moduleNpmVersion:vaadin-ordered-layout}]
---

= Scroller

// tag::description[]
Scroller is a component container for creating scrollable areas in the UI.
// end::description[]

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/scroller/scroller-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/scroller/ScrollerBasic.java[render,tags=snippet,indent=0,group=Java]
----

--

== Scroll Direction
Scroller has four different scroll directions: *vertical*, *horizontal*, *both* and *none*.
Scrollerâ€™s default scroll direction is *both*.

== Vertical
When the scroll position is vertical, the user can scroll vertically if the content overflows the container vertically.
Content that overflows horizontally is clipped and inaccessible, so the width of the content should be 100%.

== Horizontal
When the scroll position is horizontal, the user can scroll horizontally if the content overflows the container horizontally.
Content that overflows vertically is clipped and inaccessible, so the height of the content should be 100%.

[NOTE]
====
Use horizontal scrolling with caution, as it is much less common and may be difficult for users to recognize and use, in particular on non-mobile devices.
====

== Desktop
Excluding Grids, horizontal scrolling is not commonly used in desktop and/or business applications as it can be non-obvious and cumbersome to use.

It is recommended to use using Buttons to help users notice and navigate horizontally scrollable sections.
For horizontally scrollable lists, it is considered good practice to display how many list items there are and which items the user is viewing at the moment.

== Mobile
Scrolling horizontally or swiping is more common on mobile, for example for navigation purposes.
It can also be used to preserve vertical space, for example in situations where the user is exploring less important information, such as shortcuts or images.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/scroller/scroller-mobile.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/scroller/ScrollerMobile.java[render,tags=snippet,indent=0,group=Java]
----

--

== Both
When the scroll position is *Both* (default), the user can scroll vertically and horizontally if the content overflows in both directions.

This scroll direction is best suited for allowing the user to pan around large elements, such as images.
It can also be used as a fallback for a responsive layout that cannot be guaranteed not to overflow in some situations.

[.example]
--

[source, typescript]
----
include::{root}/frontend/demo/component/scroller/scroller-both.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/scroller/ScrollerBoth.java[render,tags=snippet,indent=0,group=Java]
----

--

== None
Use *None* to hide content that overflows in either direction.
No scrollbars are available to the user for accessing the clipped content.
*None* can be used in fixed size/layout situations, where overflow would cause issues.

== Related Components

|===
|Component |Usage recommendations

|<<../ordered-layout#,Horizontal Layout>>|Layout that aligns components and HTML elements horizontally.

|<<../ordered-layout#,Vertical Layout>>|Layout that aligns components and HTML elements vertically.
|===
