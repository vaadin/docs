---
title: Radio Button
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-radio-button-flow/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-radio-button-flow}[{moduleMavenVersion:com.vaadin:vaadin-radio-button-flow}], \
https://github.com/vaadin/vaadin-radio-button/releases/tag/v{moduleNpmVersion:vaadin-radio-button}[{moduleNpmVersion:vaadin-radio-button}]
---

= Radio Button

// tag::description[]
Radio Button Group allow the user to select exactly one value from a list of related but mutually exclusive options.
// end::description[]

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

== States

=== Read-only

Use read-only when content needs to be accessible but not editable. Read-only elements cannot be edited, but they do participate in the tabbing order and can thus receive focus. The contents of a read-only input can be selected and copied.

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-readonly.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonReadonly.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Disabled

Disable a field to mark it as currently unavailable. Disabled state is used for fields that are not editable and do not need to be readable. Disabled elements cannot be focused and may be inaccessible to assistive technologies like screen readers.

Disabling can be preferable to hiding an element to prevent changes in layout when the element’s visibility changes, and to make users aware of its existence even when currently unavailable.

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-disabled.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonDisabled.java[render,tags=snippet,indent=0,group=Java]
----
--

== Orientation

The component's default orientation is horizontal but vertical orientation is recommended whenever possible as it's easier for the user to scan a vertical list of options:

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-vertical.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonVertical.java[render,tags=snippet,indent=0,group=Java]
----
--

In cases where vertical space needs to be conserved, horizontal orientation can be used, but no more than 3 options are recommended:

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-horizontal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonHorizontal.java[render,tags=snippet,indent=0,group=Java]
----
--

In cases where more options need to be provided, the Select component can be used instead.

== Custom Item Presentation

Items can be customised to include more than a single line of text:

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-presentation.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonPresentation.java[render,tags=snippet,indent=0,group=Java]
----
--

== Best Practices

=== Group Labels

It is important to provide labels for Radio Button Groups to clearly distinguish them from one another, especially with multiple adjacent groups.

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-group-labels.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonGroupLabels.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Custom Option

To enable the user to enter a custom option instead of picking one from the list, use an “Other” radio button at the bottom of the list with an associated Text Field for entry. The field should be hidden or disabled until the “Other” option is selected.

[.example]
--

[source,typescript]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-custom-option.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::../../../../src/main/java/com/vaadin/demo/component/radiobutton/RadioButtonCustomOption.java[render,tags=snippet,indent=0,group=Java]
----
--

=== Default Value and Blank Option

It is generally recommended to set the most common option as the default value for Radio Button Groups. Place the default option at the top of the list.

In cases where it is important that the user makes a conscious choice, the Radio Button Group should be blank by default.

In situations where the user isn’t required to select a value, use a “blank” option:

[source,typescript,role=render-only]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-default-value.ts[render,tags=snippet,indent=0,group=TypeScript]
----

=== As Alternative to a Checkbox

Two Radio Buttons can sometimes be a better alternative to a single Checkbox.

If the Checkbox does not represent a simple yes/no choice, and its label cannot clearly communicate the meaning of its unchecked state, it is better to use a Radio Button Group with two options:

[source,typescript,role=render-only]
----
include::../../../../frontend/demo/component/radiobutton/radio-button-checkbox-alternative.ts[render,tags=snippet,indent=0,group=TypeScript]
----


In a Horizontal Layout, Radio Button Groups also align more easily with other input fields than a single checkbox.

== Related Components

|===
|Component |Usage recommendations

|<<../select#,Select>>
|A dropdown field for selecting an item from a list of options. Recommended when there is insufficient space for a Radio Button Group.

|<<../combo-box#,Combo Box>>
|A filterable, lazy loading alternative to Select, recommended for ten or more items.

|<<../list-box#,List Box>>
|Scrollable list of options. Supports single and multi-select.

|<<../check-box#,Check Box>>
|Corresponding component for multiselect options.
|===
