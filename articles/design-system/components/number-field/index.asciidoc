---
title: Number Field
layout: tabbed-page
tab-title: Usage
page-links: \
https://github.com/vaadin/vaadin-text-field-flow/releases/tag/{moduleMavenVersion:com.vaadin:vaadin-text-field-flow}[{moduleMavenVersion:com.vaadin:vaadin-text-field-flow}], \
https://github.com/vaadin/vaadin-text-field/releases/tag/v{moduleNpmVersion:vaadin-text-field}[{moduleNpmVersion:vaadin-text-field}]
---

= Number Field

// tag::description[]
Number Field sports many of the same features as Text Field but only accepts numeric input.

The input can be decimal, <<#integer-field,integral>> or <<#bigdecimal-field,big decimal>>.

You can specify a unit as a prefix or suffix for the field.
// end::description[]

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-basic.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberFieldBasic.java[render,tags=snippet,indent=0,group=Java]
----
--

== Stepper Controls

Stepper controls allow the user to quickly make small adjustments.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-stepper-controls.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberFieldStepperControls.java[render,tags=snippet,indent=0,group=Java]
----
--

== Minimum & Maximum Value

The valid input range of a Number Field can be set by defining minimum and maximum values.

You can set the helper text to instruct about the range.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-min-max.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberFieldMinMax.java[render,tags=snippet,indent=0,group=Java]
----
--

== Step

The step value of a Number Field defines the allowed number intervals.

It specifies the amount by which the value increases/decreases when using the Up/Down arrow keys or the stepper controls.

It also invalidates the field if an entered value does not align with the specified step.

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-step.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberFieldStep.java[render,tags=snippet,indent=0,group=Java]
----
--

== Number Type Variants

=== Integer Field

To only allow entering integer numbers, you can use the Integer Field:

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-integer.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberFieldInteger.java[render,tags=snippet,indent=0,group=Java]
----
--

=== BigDecimal Field

Java developers that need to support the https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html[BigDecimal] type can use Big Decimal Field:

[.example]
--

[source,typescript]
----
include::{root}/frontend/demo/component/numberfield/number-field-big-decimal.ts[render,tags=snippet,indent=0,group=TypeScript]
----

[source, java]
----
include::{root}/src/main/java/com/vaadin/demo/component/numberfield/NumberfieldBigDecimal.java[render,tags=snippet,indent=0,group=Java]
----
--

== Best Practices

Number Field should be used for actual number values such as counts and measures.
Do not use it for other digit-based values such as telephone, credit card, and social security numbers.
These values can have leading zeros and be greater than Number Fieldâ€™s maximum supported value.

When applicable, set the most common choice as the default value.
For example, airline, bus, train and other travel companies typically default the number of passengers to 1.
