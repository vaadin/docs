= Deploying Spring Boot-Based Applications

https://spring.io/projects/spring-boot[Spring Boot] applications are slightly different from tradition Java web applications (or Jakarta EE applications) in that, by default, they create a `JAR` file with an embedded server, rather than a traditional `WAR` file that is deployed on a standalone Servlet container or fully featured Java EE server.

Alternatively, Spring Boot applications can be packaged as `WAR` files, too.
Follow https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-create-a-deployable-war-file[the instructions in Spring Boot documentation] on how to do this.

The main differences between `JAR` and `WAR` packaging are as follows:

`JAR` packaging:

- there is no need for a server binary install; a Java runtime is all that is needed
- bigger package size

`WAR` packaging:

- a separate Java Servlet container is needed
- you have a free choice of servers, including Jetty, Tomcat, WildFly, GlassFish, and others
- smaller package size

See <<{articles}/flow/integrations/spring/configuration#using-spring-boot-properties,Using Spring Boot Properties>> for additional details.

You can read more about Spring applications and how to deploy them at the
https://spring.io/[official Spring website].
