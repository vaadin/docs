= Installing
:toclevels: 2

[.lead]
Get started developing applications with Vaadin by installing the development tools.
Follow the installation instructions for your operating system.

[.cards.quiet.large.hide-title]
== Instructions

++++
<style>
.card .icon {
  --color-stop1: var(--blue-500);
  --color-stop2: var(--violet-500);
}
</style>
++++

[.card]
=== Windows
image::images/windows.svg[32, 32, opts=inline, role=icon]
<<windows#,Install development tools in Windows>>

[.card]
=== macOS
image::images/macos.svg[32, 32, opts=inline, role=icon]
<<macos#,Install development tools in macOS>>

[.card]
=== Linux
image::images/linux.svg[32, 32, opts=inline, role=icon]
<<linux#,Install development tools in Linux>>

=== Next Step
If you already have the tools installed, you can start a new Vaadin project.

xref:../start#[Start a Project, role="button secondary water"]



== Additional Tools

In addition to the tools you are required to install, some additional tools are used during development that are either optional or installed automatically for you.

=== Local Development Server

Vaadin applications are run by deploying them to a Java Servlet Container (a server application).
All Vaadin starter packs come with an embedded servlet container that can be used during development.
You can also use an external servlet container, such as Tomcat, WildFly, or WebLogic.
IDEs include integration with external containers and one can make debugging easier, and more compatible if you use the same one for production.

=== Dependency Management

Managing Vaadin and other Java libraries can get tedious to do manually, so using a build system that manages dependencies automatically is recommended.
Vaadin is distributed in the Maven central repository, and can be used with any build or dependency management system that can access Maven repositories, such as Ivy or Gradle, in addition to Maven.

The npm package manager is used for managing Vaadin frontend dependencies.
