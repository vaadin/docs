---
title: Collaboration List
order: 10
layout: page
---

[[ce.collaboration-list]]
= Store Ordered Values in Topics

The Topic API provides the [classname]`CollaborationList` data structure to store ordered values and subscribe to their changes.

A [classname]`CollaborationList` can be obtained by its name in the Topic connection activation callback.

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/ce/CollaborationListExample.java[tags=snippet;!result,indent=0]
----

When you have obtained the list instance, you can insert values at the end of the list with the [methodname]`insertLast()` method.

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/ce/CollaborationListExample.java[tags=result;!future;!key,indent=0]
----

Since the insertion is asynchronous, the method returns a result object from which you can get a [classname]`CompletableFuture` that you can use to determine when the insertion has been done.

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/ce/CollaborationListExample.java[tags=result;!key,indent=0]
----

The result object also provides the `ListKey` of the inserted item, which you can use to replace the item itself, get its current value or remove it from the list.

[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/ce/CollaborationListExample.java[tags=result;!future;!advanced,indent=0]
----

== Advanced List Operations

The `ListOperation` class allows you to prepare a list operation that can then be applied to the list using the `CollaborationList::apply` method.

The reason you may want to use this class is to define certain conditions that must be met when the operation is attempted. If a condition is not met, the operation will not be completed. This is useful to protect against duplicate operations.

.Static methods of `ListOperation`
* `insertFirst()` Value will be inserted at the beginning of the list.
* `insertLast()` Value will be inserted at the end of the list.
* `insertBefore()` Value will be inserted immediately before a specified key.
* `insertAfter()` Value will be inserted immediately after a specified key.
* `insertBetween()` Shorthand for `insertAfter(value, keyBefore).ifNext(keyBefore, keyAfter)`.

.Conditional methods of `ListOperation`
* `ifFirst(key)` The specified `key` must be the first in the list.
* `ifLast(key)` The specified `key` must be the last in the list.
* `ifPrev(key, keyPrev)` The specified `keyPrev` must be immediately before `key`.
* `ifNext(key, keyNext)` The specified `keyNext` must be immediately after `key`.
* `ifEmpty()` The list must have no entries.
* `ifNotEmpty()` The list must have at least one entry.


[source,java]
----
include::{root}/src/main/java/com/vaadin/demo/ce/CollaborationListExample.java[tags=advanced,indent=0]
----


[.discussion-id]
106C5E39-A7E3-48D9-AF74-2E9A9A6576DF

