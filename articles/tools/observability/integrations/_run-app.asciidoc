[.example]
--

Run the application using the Java binary and pass the respective arguments for the Java agent and the agent configuration:
[source,terminal]
----
<source-info group="Jar File"></source-info>
java -javaagent:PATH/TO/vaadin-opentelemetry-javaagent-VERSION.jar \
     -Dotel.javaagent.configuration-file=PATH/TO/agent.properties \
     -jar myapp.jar
----

First create a file `setenv.[bat|sh]` in your Tomcat installation's `bin` folder.
This file is run automatically with the startup script.
Add the respective content for your operating system from below, but with your particular installation's file paths.
Then start Tomcat using `bin/startup.[sh|bat]`.
[source,terminal]
----
<source-info group="Tomcat"></source-info>
# Linux / MacOS
export CATALINA_OPTS="$CATALINA_OPTS -javaagent:PATH/TO/vaadin-opentelemetry-javaagent-VERSION.jar"
export OTEL_JAVAAGENT_CONFIGURATION_FILE=PATH/TO/agent.properties
# Windows
set  CATALINA_OPTS=%CATALINA_OPTS% -javaagent:PATH\TO\vaadin-opentelemetry-javaagent-VERSION.jar
set  OTEL_JAVAAGENT_CONFIGURATION_FILE=PATH\TO\agent.properties
----

Start Jetty and pass the respective arguments for the Java agent and the agent configuration:
[source,terminal]
----
<source-info group="Jetty"></source-info>
java -javaagent:PATH/TO/vaadin-opentelemetry-javaagent-VERSION.jar \
     -Dotel.javaagent.configuration-file=PATH/TO/agent.properties \
     -jar /PATH/TO/jetty_home/start.jar
----

If you want to run an app with the agent through Maven for testing purposes, set the `MAVEN_OPTS` as shown below. Then run your Maven goal (e.g., `mvn jetty:run`).
[source,terminal]
----
<source-info group="Maven"></source-info>
# Linux / MacOS
export MAVEN_OPTS="-javaagent:PATH/TO/vaadin-opentelemetry-javaagent-VERSION.jar -Dotel.javaagent.configuration-file=PATH/TO/agent.properties"
# Windows
set MAVEN_OPTS="-javaagent:PATH\TO\vaadin-opentelemetry-javaagent-VERSION.jar -Dotel.javaagent.configuration-file=PATH\TO\agent.properties"
----

--

[NOTE]
Remember to correct the path to the `agent.properties` file, as well as the path and version of the Observability Kit agent.
