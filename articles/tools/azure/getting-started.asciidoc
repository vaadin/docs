---
title: Getting Started
description: Step-by-step guide showing how to add Azure Kit to your application.
order: 10
---

= Getting Started with Azure Kit
:sectnums:

This guide covers the following topics:

- Downloading Azure Kit by ...
// compared to SSO Kit
- Setting up TEXT;
// What do they need to set up to get started?
- Running a Vaadin Flow application with Azure Kit.


== Add the Azure Kit Dependency

To get started you first need to add Azure Kit as a dependency to your application, for example to your Maven project:

.pom.xml
[source,xml]
----
<dependency>
  <groupId>com.vaadin</groupId>
  <artifactId>azure-kit-starter</artifactId>
</dependency>
----


## Azure Kit Demo

To run the demo you first need to have a local Kubernetes cluster up and running.
You can find recommended tools here: https://kubernetes.io/docs/tasks/tools/

You also need to setup the ingress-ngnix before:
```
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.4.0/deploy/static/provider/cloud/deploy.yaml
```

To deploy the demo application into your cluster, follow these steps:
1. Build the application JAR:
```
# mvn clean package -Pproduction,redis
```
2. Create or update the Docker image with version tag:
```
# docker build -t azure-kit-demo:1.0.0 .
```
Optionally, if you run a local docker registry, add the *localhost:5001* registry address prefix as well and push it to registry. Refer to the image in the configuration files with *the localhost:5001/azure-kit-demo:1.0.0* name:
```
# docker build localhost:5001/azure-kit-demo:1.0.0 .
# docker push localhost:5001/azure-kit-demo:1.0.0
```
3. Deploy the image, Redis service and ingress controller into the cluster:
```
# kubectl apply -f deployment/redis.yaml -f deployment/app-v1.yaml -f deployment/ingress-v1.yaml
```
4. Open port forward for ingress controller (in other window, and keep it open):
```
# kubectl port-forward -n ingress-nginx service/ingress-nginx-controller 8080:80
```

You should now see 4 pods running, e.g.
```
# kubectl get pods
NAME                                 READY   STATUS    RESTARTS      AGE
azure-kit-demo-f87bfcbb4-5qjml       1/1     Running   0             22s
azure-kit-demo-f87bfcbb4-czkzr       1/1     Running   0             22s
azure-kit-demo-f87bfcbb4-gjqw6       1/1     Running   0             22s
azure-kit-demo-f87bfcbb4-rxvjb       1/1     Running   0             22s
azure-kit-redis-788d56c66-8b259      1/1     Running   0             22s
```

At this point the demo should be reachable at http://localhost:8080/

NOTE: You can run the demo with Hazelcast instead of Redis by replacing `redis` with `hazelcast` in steps 2 and 4.
