---
title: Configuration
description: Configuration options for Kubernetes Kit.
order: 120
---


= Configuring Kubernetes Kit

== Packages Inspected during Serialization

When a session is serialized, Kubernetes Kit inspects classes for transient fields that can be injected during deserialization (see <<session-replication#,session replication>>).

Kubernetes Kit provides two properties to limit the packages to be inspected. The `include-package` property defines all of the packages that should be inspected. If this is undefined, all packages are assessed. For this reason, it's recommended that you specify the top-level package for your application in the `include-packages` property.

The `exclude-package` property lists packages that should not be assessed.

[.example]
--
.application.properties
[source,properties]
----
vaadin.serialization.include-packages=com.example.application
vaadin.serialization.exclude-packages=com.example.application.service
----

.application.yaml
[source,yaml]
----
vaadin:
  serialization:
    include-packages: com.example.application
    exclude-packages: com.example.application.service
----
--


== Hazelcast for Session Replication

The `service-name` property defines the name of the Hazelcast service deployment within a cluster.

The optional `namespace` property is used when the Hazelcast service is deployed in a namespace other than `default`.

[.example]
--
.application.properties
[source,properties]
----
vaadin.kubernetes.hazelcast.service-name=hazelcast-service
vaadin.kubernetes.hazelcast.namespace=namespace
----

.application.yaml
[source,yaml]
----
vaadin:
  kubernetes:
    hazelcast:
      service-name: hazelcast-service
      namespace: namespace
----
--


== Redis for Session Replication

This property defines the name of the Redis service deployment within a cluster.

[.example]
--
.application.properties
[source,properties]
----
spring.data.redis.host: redis-service
----

.application.yaml
[source,yaml]
----
spring:
  redis:
    host: redis-service
----
--
