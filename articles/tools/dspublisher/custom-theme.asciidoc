---
title: Custom Theme
order: 60
---

= Applying a Custom Application Theme

An application theme is used from a Maven repository, such as Maven Central or a local repository.
Once you have <<{articles}/components/ds-resources/customization/custom-theme#,created a custom theme>> and <<{articles}/components/ds-resources/customization/custom-theme-packaging#,packaged it as a JAR file>>, you can install it to a repository.

Once the theme is installed in the repository, you can use it by adding a dependency for it to the [filename]#pom.xml# in the project's root folder:

.[filename]#pom.xml#
[source,xml]
----
<dependencies>
  ...
  <dependency>
    <groupId>com.example</groupId>
    <artifactId>exampletheme</artifactId>
    <version>1.0</version>
  </dependency>
</dependencies>
----

Next, the theme needs to be applied to the component samples.
Change the <<{articles}/components/ds-resources/customization/custom-theme/#applying-a-custom-theme, `@Theme` annotation>> in `src/main/java/com/vaadin/demo/DemoExporter.java` as shown in the following:

.[filename]#src/main/java/com/vaadin/demo/DemoExporter.java#
[source,java]
----
@Theme("exampletheme")
public abstract class DemoExporter<T extends Component> extends WebComponentExporter<T> {
  ...
}
----

The website needs to be rebuilt, or restarted in development mode, in order for the change to take effect.

.Application theme vs website styling
[NOTE]
This article is about the theme used for rendered UI samples, which is distinct from the documentation website's styles covered in the <<customization#,Site Customization>> documentation.
