---
title: Troubleshooting
order: 1000
---

= Troubleshooting

The browser doesn't match the content in the filesystem:: [[cache]]
To speed up the start process, the Design System Publisher caches some resources internally.
Sometimes, caches tend to get out of sync, and need cleaning up.
Run `npm run dspublisher:clean` to wipe out the internal caches and restart to see if it fixes the issue.
+
Note that the issue may also concern the browser's cache.
In case the above doesn't help, try cleaning the browser's cache as well.

The browser doesn't update live when content is updated in the filesystem:: [[live-reload]]
When running on Windows, make sure the Design System Publisher project folder is stored in the Windows Subsystem for Linux (WSL2) filesystem.
Check the https://docs.microsoft.com/en-us/windows/wsl/install-win10[official WSL2 documentation] for detailed installation instructions.
+
Design System Publisher relies on the filesystem watchers to detect changes to the source files and refresh the content served to the browser.
When running on Windows, the Publisher Docker container only receives file change events when the source files are stored on the Linux filesystem (see the https://docs.docker.com/docker-for-windows/wsl/#best-practices[Docker for Windows best practices]).

Updating the page heading in AsciiDoc does't affect the rendered page heading:: [[page-heading]]
There's one caveat about the page headings.
On a regular page, if you change the main heading in the AsciiDoc (`= Page Heading`), you see the heading update as expected.
But if you use `layout: tabbed-page` in the page front matter, the tabbed page heading is actually obtained from the front matter's title field so you need to update that instead.

File permission issues on Linux, some files are owned by root user:: [[file-permissions]]
The Design System Publisher tool runs inside a Docker container and creates files on volumes mounted from the host environment.
There's a https://github.com/moby/moby/issues/2259[known issue] affecting Linux hosts that the files created on the mounted volumes are by default owned by the "root" user.
If necessary, you can manually change the ownership of the files inside the documentation project directory and the local Maven repository back to the current user, for example:
+
[source,terminal]
----
sudo chown -R $(whoami) path-to-the-project
----
+
and
+
[source,terminal]
----
sudo chown -R $(whoami) ~/.m2
----
