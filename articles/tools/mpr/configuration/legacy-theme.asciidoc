---
title: Legacy theme in MPR
order: 1
layout: page
---

= Legacy theme in MPR

By default the theme used with MPR is `"valo"` and this can be changed with
adding the `MprTheme` annotation with the wanted theme name to your `AppShellConfigurator`
configuration class.

[NOTE]
Runtime changing of the theme isn't supported

.Sample theme definition
[source,java]
----
@MprTheme("reindeer")
public class Configuration implements AppShellConfigurator {
}

public class MainLayout extends Div implements RouterLayout {
}

@Route(value = "", layout = MainLayout.class)
public class RootTarget extends Div {
    public RootTarget() {
      LegacyWrapper addressbookWrapper = new LegacyWrapper(
                  new AddressbookLayout());
      add(addressbookWrapper);
    }
}
----

The theme can be a old legacy `styles.css` theme or a `styles.scss` theme.
With a Sass-based theme, on-the-fly compilation works out of the box without any changes.

== Using your custom theme

Using your own Vaadin legacy theme remains the same as it was.
Create your theme by following the instructions in the themes documentation for
link:/docs/v7/framework/themes/themes-overview[Vaadin 7,role="skip-xref-check"] or
link:/docs/v8/framework/themes/themes-overview[Vaadin 8,role="skip-xref-check"].

Then add the `@MprTheme` annotation with your theme name on the
[classname]`AppShellConfigurator` instance and your theme is used for the legacy
framework part.

.Legacy theme is applied only when a view has legacy components
[NOTE]
Styles for non-legacy components shouldn't be included in the legacy theme.

[discussion-id]`38233D6E-8B3F-4DB4-B5EF-DC0E4785FB91`
