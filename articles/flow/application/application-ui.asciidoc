---
title: Building a View
order: 10
layout: page
---

[[application.ui]]
= Building a View

A web application typically consists of a number of views.
Each view is built hierarchically from components.
At the bottom, you have a root layout component, which contains other components.
Vaadin comes with a https://vaadin.com/components[large library of UI components] that you can use.

.Schematic diagram of a view
image::images/ui-schematic.png[View schematic]

Each view is typically associated with a _route_, a part of the URL that Vaadin determines to show a particular view.

== View Navigation

While the simplest applications have just one view, most of them often require several.
Views can represent parts of the application workflow, such as login - main view - logout, or offer different functionalities or data resources.
Even in a single view, you often want to have sub-views, for example to display different content.

The user can change from one view to another using navigation, such as with menu navigation, which can be implemented in many ways.
Each view can be mapped into a URL using _routing_, hence making the different functionalities and resources available using the URLs.

.View navigation
image::images/view-navigation-hi.png[View navigation]

See <<routing-navigation#, Routing and Navigation>> for an introduction to routing.

== Events

You can add functionality to your application by listening to events, such as, click events from buttons, or value-change events from select components.

This example adds the text "Clicked!" to the layout when the button is clicked.

[source, Java]
----
button.addClickListener(clickEvent ->
    add(new Text("Clicked!")));
----
