---
title: Basic Routing and Navigation
order: 20
layout: page
---

= Basic Routing and Navigation

You can navigate around the views in an application in two basic ways: either by interacting with the UI or by entering an URL to directly navigate to a specific view.
When navigating with buttons or other components in a UI, the browser URL can be updated to reflect the current view.
The user can then copy or link the URL to give direct access to the specific views.

.Routing URLs to content
image::images/routing-navigation.png[]

_Routing_ maps URLs to views or resources to navigate directly to the desired content or functionality.
Typically, the root route `/` shows a main view, a route such as `/users` could show a sub-view that displays a list of users, and a route with the user ID as a parameter, such as `/users/dadams`, would show a specific user.

You can have routes to views written in either Java or TypeScript, and you can mix them in the same application.
While Java views require a server connection, TypeScript views also work offline.

[.example]
--
In Java views, use the [classname]#@Route# annotation to define a route for a view.

[source, java]
----
include::../../../src/main/java/com/vaadin/demo/flow/routing/LoginScreen.java[tags=routing-basic, indent=0, group=Java]
----

In TypeScript, the routes are normal custom elements.
Routes to the elements are defined in  the `index.ts`.

[source, typescript]
----
include::../../../frontend/demo/routing/index.ts[tags=routing-basic, indent=0, group=TypeScript]
----

[source, typescript]
----
include::../../../frontend/demo/routing/routing-basic.ts[indent=0, group=TypeScript]
----
--

The following features are supported:

* Child routes, such as `/main/users` and `/main/premises`.
* Fallback routes, such as showing an error page for a path such as `/users/imvaliduser`.
* Route parameters, such as `/users/:userid` to catch URLs such as `/users/dadams`.
* Redirects, such as redirecting root route `/` to `/login`.

Routing is handled on the client-side by the https://vaadin.com/router[Vaadin Router] JavaScript library.
While we use the library here to enable routing for TypeScript views, you can use it in any JavaScript application.
