---
title: Detecting PolymerTemplate Mappings in Components
order: 12
layout: page
---

== Detecting PolymerTemplate Mappings in Components

*Usage of Lit based templates is recommended even though polymer based templates are available in the next LTS as deprecated.*

You can detect whether a component is part of a Polymer template using the `isTemplateMapped` method. 

This is useful if you want to execute custom logic depending on whether the component was mapped in a template (injected via the `@Id` or `@Uses` annotations) or created directly using one of its constructors, for example.

*Example*: Calling the `isTemplateMapped` method in `MyComponent`.

[source,java]
----
@Tag("div")
public class MyComponent extends Div {

  public MyComponent() {
    if (!isTemplateMapped()) {
      getElement().getStyle().set("color", "red");
    }
  }
}
----
* By default, the component only sets a style when the component is not part of a template.

See <<tutorial-template-components#,Binding Components from a PolymerTemplate>> for more about To `@Id` mappings.
