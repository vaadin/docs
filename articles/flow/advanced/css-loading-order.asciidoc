---
title: CSS Loading Order
description: Understanding CSS loading order.
order: 610
layout: page
---

= CSS Loading Order

A theme is the recommended way to organize styles in a Vaadin application.
However, the other ways to import styles, namely the `@CSSImport` and `@StyleSheet` annotations, are still supported.
Styles applied with different approaches have different loading orders.
That is, their priorities are computed in the browser and possibly override each other.

To keep the application theming and styles consistent and well formed, it is important to consider the loading order of the following CSS sources:

. The `Lumo` theme
. Application-specific bundled CSS added with a `@CssImport', as described in <<{articles}/flow/application/styling#importing.bundled,Importing Bundled Style Sheets>> (_if used_)
. Styles added on the Java side via [methodname]`Page::addStylesheet()` (_if used_)
. Application-specific unbundled CSS added with `@StyleSheet`, as described in <<{articles}/flow/application/styling#importing.external,Importing External Style Sheets>>  (_if used_)
. Parent theme (_if used_)
. Current theme

[NOTE]
The `Lumo` theme is not loaded and applied if another theme class is provided (for example, `@Theme(themeClass = MyCustomTheme.class)`), or if `@NoTheme` is found.

The parent theme is an existing theme whose styles and variables the current theme inherits.

The "current theme" is the theme used in your application.
It can be a theme created locally or packaged as a `JAR` dependency.
See <<{articles}/ds/customization/custom-theme#, Creating a Custom Theme>> for more information.

Styles with a higher loading order have a higher precedence.
For example, the following style, if placed in [filename]#global.css# within the theme folder `frontend/themes/my-theme`, overrides the default `Lumo` font size `1rem` with `0.875rem`:

[source,css]
----
html {
    --lumo-font-size-m: 0.875rem;
}
----

[WARNING]
By default, a <<{articles}/flow/advanced/loading-indicator#,loading indicator>> is shown at the top of the viewport after a delay.
If a theme modifies the loading indicator style, the new style is applied in the middle of the loading progress.
To avoid this, the style for the loading indicator should be defined in [filename]#frontend/index.html# explicitly using the `.v-loading-indicator` CSS selector.
