---
title: Legacy Component Pack
order: 40
layout: page
---

= Legacy Component Pack
:toclevels: 2

One of the biggest challenges in migrating from Vaadin 7 or 8 to the new web components based Vaadin Flow is the difference between the UI components in API and behavior.
The Legacy Component Pack is an add-on that provides a set of backwards compatible "legacy components" that ease migrating from Vaadin 7 or 8 to the latest Vaadin version.
The API, behavior, and even DOM-structure of the components mimic, as closely as possible, to the existing components.

The first version of the pack will consist of the following components: `HorizontalLayout`, `VerticalLayot`, `Panel` and `Label`.
Each component either doesn't have a corresponding component available with Flow, or the behavior and API has changes so significantly, that it would require significant effort to modify the code to migrate it to Flow.
By using the legacy component pack, for the forementioned components, only the imports need to be changed to be able to use almost all of the same component features.

== License

The Legacy Component Pack is licensed under Commercial Vaadin Developer License 4.0 (CVDLv4) and part of the https://vaadin.com/pricing[Pro Subscription].
You will be asked to validate your license or start a trial period when you start to use it.

== Usage Instructions

The pack is aimed for to be used when migrating your project from Vaadin 7 or 8 to the latest Vaadin version.
The pack itself should work with any Vaadin version, but it is tested against the latest version.
For migrators, the recommendation is to migrate to the latest version.

To use the legacy components, you first need to add the dependency to your projects `pom.xml` or `build.gradle`:

. Add the pack dependency to [filename]#pom.xml#:
+
.`pom.xml`
[source,xml]
----
<dependencies>
    <!-| other dependencies -->
    <dependency>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-legacy-components-flow</artifactId>
         <!-- Version can be omitted once the package is added to vaadin-bom -->
        <version>1.0.0.alpha1</version>
    </dependency>
</dependencies>
----
+
.Prerelease
[NOTE]
The pack is currently in prerelease state which means that you need to include the Vaadin prereleases Maven repository to your `<repositories>` listing.

After the dependency has been downloaded, you can start using the components by updating the component imports. For the components that are included in the pack, change the import statements to the corresponding legacy packages: from `com.vaadin.ui` to `com.vaadin.legacy.ui`.


== Limitations and Unsupported API

TODO https://github.com/vaadin/flow-legacy-components/issues/72

== Incompatible API Table

TODO https://github.com/vaadin/flow-legacy-components/issues/72

== Included Components

=== HorizontalLayout and VerticalLayout

The Legacy Components Pack comes with `HorizontalLayout` and `VerticalLayout` designed to work and behave as close as possible to the corresponding components present on the Vaadin 7 or 8 versions.
A few of the key features the components support include:

- *Expand Ratio*: children with "expand ratio" defined share the available space among them based on their ratios
- *Alignment*: each child can be aligned within its container (for example, top-left, middle-center, bottom-right, etc)
- *Margin*: each side of the component's margin can be enabled or disabled independently

The DOM structure of `VerticalLayout` and `HorizontalLayout` was developed to maintain the same set of elements and CSS classes (such as `v-verticallayout`/`v-horizontallayout`, `v-has-width`, `v-expand` and so on) so that the project migrating from Vaadin 7 or 8 is likely able to use its current styles as is.
Class names defined to the layouts are added in the same way as before (for example, if `custom-style` is added to a `VerticalLayout` instance, both `custom-style` and `v-verticallayout-custom-style` are added to the DOM element).

.Missing features
[NOTE]
`ContextClickEvent` and `LayoutClickListener` are not yet implemented on the Legacy layouts and should be added to a future version.

`HorizontalLayout` and `VerticalLayout` are both Flow components, which means that they can be used together with any other component (Flow or other Legacy components).

==== Deviations

Different from the previous implementation, the layouts use Flexbox, since it enables achieving the same behavior, especially for the "expand ratio" and alignment features, with a nicer and cleaner way.
If any of the styles on the project being migrated relies on the former implementation, it might not work as expected with the Legacy layouts.

Related to the sizes, `VerticalLayout` and `HorizontalLayout` use Lumo variables to define the sizes for their spacing and margin.

|===
|Valo Sass variable |Lumo CSS variable

|`$v-layout-spacing-horizontal` |`--lumo-space-m`
|`$v-layout-spacing-vertical` |`--lumo-space-m`
|`$v-layout-margin-top` |`--lumo-space-m`
|`$v-layout-margin-right` |`--lumo-space-m`
|`$v-layout-margin-bottom` |`--lumo-space-m`
|`$v-layout-margin-left` |`--lumo-space-m`

|===

=== Panel

TODO

=== Label

TODO
