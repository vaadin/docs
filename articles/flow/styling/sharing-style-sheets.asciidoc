---
title: Sharing Style Sheets
order: 40
layout: page
---

= Sharing Style Sheets
ifdef::web[]
endif::web[]

Avoid copy-pasting the same CSS in multiple style sheets.

You can share a style sheet between the global scope and multiple component scopes.
One common use case for shared style sheets is to define typographic styles which you want to be applied consistently across the whole application.

ifdef::web[]
endif::web[]

== Prerequisites

You should be familiar with <<style-scopes#,Style Scopes>> and <<importing-style-sheets#,Importing Style Sheets>>.


== Creating Shared Style Sheets

To be able to share styles across many style scopes, you need to create a shared style sheet.

[.example]
--

If you want to share style sheets in server-side views (Java), place the shared styles in a separate `.css` file.
You make it shareable by using the [classname]#@CssImport# annotation and giving it a unique `id`.
The style sheet will not be imported to any scope until another style sheet includes it using the `id`.

[source, java]
----
include::src/main/java/com/vaadin/flow/tutorial/theme/ImportingStyleSheets.java[tags=cssimport-id, indent=0, group=Java]
----

.`shared-typograhy.css`
[source, css]
----
include::src/main/css/StylingApplications.css[tags=shared-css, indent=0, group=Java]
----

If you want to share style sheets in client-side views (JavaScript), the recommended way is to package CSS in https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules[JavaScript modules] (`.js` files) and export them using the `css` tagged template literal.

.`shared-typography.css.js`
[source, javascript]
----
include::src/main/js/ImportStyleSheets.js[tags=import-css-function;export-css, indent=0, group=JavaScript]
----
--


== Using Shared Style Sheets

Once you have created and defined a shared style sheet, you can include it in another style sheet which you can import either to the global style scope or to a componentâ€™s local style scope.

=== Global Style Scope

[.example]
--
In server-side views (Java), reference the `id` of the shared style sheet in the `include` attribute of the [classname]#@CssImport# annotation. This will include the shared style sheet in the global scope, together with the other style sheet the annotation references using the file path.

[source, java]
----
include::src/main/java/com/vaadin/flow/tutorial/theme/ImportingStyleSheets.java[tags=cssimport-include, indent=0, group=Java]
----

In client-side views (JavaScript), import the CSS string from a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules[JavaScript module] and append it to a `<style>` element.

[source, javascript]
----
include::src/main/js/ImportStyleSheets.js[tags=import-shared-css;import-css, indent=0, group=JavaScript]
----
--


=== Component Style Scope

[.example]
--

To use a shared style sheet in a component scope, add the `include` attribute to a component scoped [classname]#@CssImport# annotation.

[source, java]
----
include::src/main/java/com/vaadin/flow/tutorial/theme/ImportingStyleSheets.java[tags=cssimport-themefor-include, indent=0, group=Java]
----

[source, javascript]
----
include::src/main/js/ImportStyleSheets.js[tags=register-styles-include, indent=0, group=JavaScript]
----
--

If you want to share a style sheet with a custom web component or client-side template, import it in the template directly.

[source, javascript]
----
include::src/main/js/ImportStyleSheets.js[tags=import-polymer;import-shared-css;custom-element, indent=0, group=JavaScript]
----
