---
title: Variants
order: 10
layout: page
---

= Material Variants
ifdef::web[]
endif::web[]

Material has global variants that you can use to quickly customize all components and built-in component variants that can be used to style individual component instances quickly.

ifdef::web[]
endif::web[]

== Dark Mode

Dark mode is commonly used in low-light environments or during night-time.

[.example]
--

In server-side views, use the `variant` attribute of the [classname]#@Theme# annotation. See <<../using-themes#,Using Themes>> for more information.

[source, java]
----
include::../src/main/java/com/vaadin/flow/tutorial/theme/UsingComponentThemes.java[tags=material-dark, indent=0, group=Java]
----

In client-side views, set the `theme` attribute on the `<html>` element.

[source, javascript]
----
include::../src/main/js/ThemeVariants.js[tags=global-dark, indent=0, group=JavaScript]
----

[source, html]
----
include::../src/main/html/ThemeVariants.html[tags=global-dark, indent=0, group=HTML]
----
--

You can also use the same attribute on any element which is in the global style scope (see <<../style-scopes#,Style Scopes>>).

For server-side components, you can use the <<../../flow/element-api/tutorial-properties-attributes#,Element API>> to set the attribute value. Some components offer specific API for setting theme variants.

[source, java]
----
VerticalLayout dark = new VerticalLayout();
dark.getElement().setAttribute("theme", Lumo.DARK);
----

For client-side components/templates you can add the attribute directly to the HTML element.

[source, html]
----
<vaadin-vertical-layout theme="dark"></vaadin-vertical-layout>
----



== Component Variants

You can find a component's Material variants from the
ifdef::web[]
https://cdn.vaadin.com/vaadin-material-styles/1.3.2/demo/[Material theme example site].
endif::web[]
ifndef::web[]
Material theme example site.
endif::web[]
