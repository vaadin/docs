---
title: Migrating from earlier versions
order: 8
layout: page
---

[[charts.migratingfromearlierversions]]
= Migrating from Earlier Versions

Charts 9 comes with new chart types and brings back the API to style from Java.

== Summary

* Upgraded to Highcharts 8.1
* Styling can be done either with CSS or Java API (default)
* New chart types:
** <<charttypes#charts.charttypes.bullet,"Bullet Chart">>
** <<charttypes#charts.charttypes.organization,"Organization Chart">>
** <<charttypes#charts.charttypes.timeline,"Timeline Chart">>
** <<charttypes#charts.charttypes.xrange,"X-Range Chart">>
* Java API for lazy drill-down

== Migration Guide

If you are migrating your project from an earlier Vaadin version, there might be different approaches related with which styling option you pick.

.Both CSS and Java styling can't be used in the same project
[CAUTION]
While no error is thrown if different styling methods are used in the same project, *only one method should be used across all charts*, since having both could lead to unexpected results.

=== Migrating from Vaadin 8

==== Using Java API Styling

Since Charts uses Java API for styling by default, there's no needed to do any extra step.

NOTE: There might be small changes to the APIs, compared to the Highcharts version used in Vaadin 8.

==== Using CSS Styling

If you want to convert your project to use CSS styling, enable it by setting `styledMode` to `true`:

[source,java]
----
Chart chart = new Chart();
Configuration conf = chart.getConfiguration();
conf.getChart().setStyledMode(true);
----

For more detailed instructions, see the
<<css-styling#,"CSS Styling guide">>

[[v10]]
=== Migragint from Vaadin 10 or Later

==== Using Java API Styling

If your project doesn't have any Charts custom theme, then there's no extra step needed to do.

In the other hand, if it has custom themes, then they should be removed, along aside their `@CssImport` annotations. You can, then, use the Java API for styling the charts.


==== Using CSS Styling

To keep using CSS styling, enable the `styledMode` as described on this same topic at the previous section.

=== Running Charts 9 in V14

Although Charts 9 is released as a part of a later Vaadin version, a project running Vaadin 14 in *npm mode* could use the new Charts by overriding the version in the Project Object Model (POM) file:

.pom.xml
[source,xml]
----
<dependency>
    <groupId>com.vaadin</groupId>
    <artifactId>vaadin-charts-flow</artifactId>
    <version>9.0.0</version>
</dependency>
----

NOTE: Check the latest version on the https://github.com/vaadin/vaadin-charts-flow/releases[Charts release page].

Then, to start using it, see the <<v10>> instructions on this page.


[discussion-id]`CA191212-B228-4F07-9F40-BC0C68F84FA0`
