---
title: Web Storage API
description: Using Web Storage from the server side.
order: 760
---


= Web Storage API
:toc:

The [interfacename]`WebStorage` API allows you to access the https://developer.mozilla.org/en-US/docs Web/API/Web_Storage_API[browser Web Storage] from the server side. Web Storage is a standard JavaScript API to store string-only key and value pairs in the device running the browser. Data is persisted only in that device.

[classname]`WebStorage.Storage` defines two types of storage: local storage and
session storage.

[NOTE]
[interfacename]`WebStorage` uses `UI.getCurrent()` by default to get a target UI instance. All methods also have variant with a parameter for UI instance. The UI instance argument shouldn't be null. This should be noted especially when calling a method outside of the main thread.


== Local Storage

Local storage data is stored per origin -- a combination of protocol, host, and port -- with no expiration date.

Shortcuts: [methodname]`setItem(String, String)`, [methodname]`removeItem(String)`, and [methodname]`clear()`.

[source,java]
----
// set key and value pair to local storage
WebStorage.setItem("key", "value");
----


== Session Storage

Session storage data is stored per origin and browser page session (i.e., the browser window or tab). Storage is cleared when the window or tab is closed.

[NOTE]
Session storage term comes from the `Window.sessionStorage` Web Storage JavaScript API. It's not directly affected by lifecycle of Vaadin session or HTTP session in general.


== Setting Key & Value Pairs

Set key and value pairs in the storage with [methodname]`setItem(Storage, String, String)`.

[source,java]
----
// set key and value pair to local storage
WebStorage.setItem(Storage.LOCAL_STORAGE, "key", "value");
----


== Removing Key and Value Pair

Remove key and value pairs from the storage with [methodname]`removeItem(Storage, String)`.

[source,java]
----
// remove key and value pair from the session storage
WebStorage.removeItem(Storage.SESSION_STORAGE, "key");
----


== Clearing Storage

Clear storage with [methodname]`clear(Storage)`.

[source,java]
----
WebStorage.clear(Storage.SESSION_STORAGE);
----


== Getting Values from Storage

You can request values from the storage by a key. You can process the returned value using a callback with [methodname]`getItem(Storage, String, Callback)`.

[source,java]
----
// get value from the session storage by a key
WebStorage.getItem(Storage.SESSION_STORAGE, "key", value -> {
    System.out.println(value);
});
----

[NOTE]
Callback gives a null value in case of an unexpected error.

