---
title: Drag and Drop
description: Drag and drop between components as well as between the UI and the operating system.
order: 100
---

= Drag and Drop

Dragging a UI object from one location to another is a common way to move, copy, or associate objects.
The user grabs the object with the mouse, keeping the mouse button pressed, and then releases the button to "drop" it at the other location.
For example, most operating systems allow dragging and dropping files between folders, or dragging a document to a program to open it.

The framework supports generic drag and drop for any component.
In this context, there is:

* a drag source that the user can drag and drop, with the [classname]`DragSource` extension;
* a drop target that the user can drop things on, with the [classname]`DropTarget` extension.

Drag and drop, or "DnD", support is based on the link:https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API[HTML5 drag and drop API].
The framework supports a subset of the API's features that make sense for server-side component development.
When you are building applications with JavaScript modules, you can use the full HTML 5 API from JavaScript, if needed.

== Topics

section_outline::[]

== Browser-Specific Differences

Not all modern browsers follow the HTML 5 drag and drop specification in the same way.
The evergreen versions of Chrome and Firefox work quite consistently.
However, Edge and Safari (on macOS) have some issues.

The biggest of these is that these browsers do not report any "results" of the drop operation in the [classname]`DragEnd` event.
This means that, *in those browsers it is impossible to determine in the drag source whether or not the drop actually occurred*.

Moreover, those browsers do not prevent the drop event when the [methodname]`effectAllowed()` does not match the desired [methodname]`dropEffect()` in the drop target.

It is the responsibility of the application developer to take these differences into account.
The issues should disappear in the future for the Edge browser when it is based on Chromium (which is the same as Chrome).

In the meantime, for applications where the users rely on being able to use DnD operations, it is recommended to require them to use either Firefox or Chrome, if possible.

== Drag and Drop on Mobile Devices

The drag and drop feature also works out of the box with mobile devices with the Chrome browser on Android and Safari on iOS.
For iOS, there is a _polyfill_ loaded automatically into the browser which works around the lack of support for DnD on iOS.
Mobile Firefox is currently unsupported.

== Components with Built-in Drag and Drop Features

Most Vaadin components do not have built-in support for drag and drop, but can be made draggable or droppable-on using the [classname]`DragSource` and [classname]`DropTarget` extensions respectively.

The `Grid` and `TreeGrid` components are the only exceptions to this.
They have built-in support for <<{articles}/ds/components/grid/#drag-and-drop, dragging rows and dropping on rows>>.
