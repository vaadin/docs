---
title: FAQ
order: 3
page-title: "Hilla framework FAQ"
description: "Frequently asked questions about the Hilla framework."
---
= Hilla FAQ

== What is Hilla?

Hilla is a framework for building reactive web apps on Java backends.
It seamlessly integrates a reactive https://lit.dev/[Lit^] TypeScript frontend with a https://spring.io/projects/spring-boot[Spring Boot^] backend.

Hilla is designed to be simple enough for small utilities, but robust enough to build complex, enterprise-grade apps.

The automatic type generation ensures that your frontend and backend always stay in sync and that you catch mistakes at build time, not runtime.

== Who Is Hilla Made For?
We built Hilla to provide a simpler way to build complex business applications. A smaller team, or even a solo developer, can build the full stack, instead of having separate front- and backend teams synchronizing their work. Hilla is also made for those who value open-source transparency together with the option of first-party support for their business.

== Who Is Behind Hilla?
Hilla is made and maintained by https://vaadin.com[Vaadin^], the company behind the top Java web framework and corresponding tools and components for over 20 years.

== Is Hilla Open Source?
Yes, Hilla is Apache 2.0 licensed.
Hilla is hosted in a public https://github.com/vaadin/hilla[GitHub repository^] where you can view, extend and modify the source code and report issues.

== Can I Get Enterprise Support for Hilla?
Hilla is supported by Vaadin.
All the commercial support, components, warranty, and services apply to Hilla.
See the https://vaadin.com/pricing[Vaadin pricing page^] for details.

== How Is Hilla Different From React?
Hilla has a component model that's similar to React, using the https://lit.dev/[Lit] library.
What makes Hilla different from React is that it includes both the frontend and Java backend in the same project.
Hilla includes everything you need to build an application in one package: UI components, routing, forms, security, build tooling.
You can get first-party support for using Hilla from Vaadin, the company that built it.

== How Is Hilla Different From Angular?
Angular is a frontend framework for mobile and desktop applications with modules, dependency injection, and other features that enterprise app developers are used to.

Hilla builds on web standards and includes a component model that uses the https://lit.dev/[Lit] library.
Unlike Angular, Hilla includes both the frontend and Java backend in the same project.
Hilla includes everything you need to build an application in one package: UI components, routing, forms, security, build tooling.
You can get first-party support for using Hilla from Vaadin, the company that built it.

== How Is Hilla Different From Vue?
Vue.js is a lightweight frontend framework with a framework-specific component model.

Hilla builds on web standards and includes a component model that uses the https://lit.dev/[Lit] library.
Unlike Vue, Hilla includes both the frontend and Java backend in the same project.
Hilla includes everything you need to build an application in one package: UI components, routing, forms, security, build tooling.
You can get first-party support for using Hilla from Vaadin, the company that built it.

== How Is Hilla Different From JHipster?
JHipster provides a set of tools for generating full-stack web apps and microservices by combining a Java Spring backend with a React/Angular/Vue frontend.

Hilla is an opinionated full-stack framework that includes a Spring Boot backend and a reactive Lit frontend.
It includes UI components, routing, forms, security, and build tooling.
As the framework is updated, we ensure that the different parts of it remain interoperable, and offer documentation for upgrading when needed.

== Is Hilla Related to Vaadin Fusion?
Hilla used to be called Vaadin Fusion.
It has since grown into its individual framework.
You can still build hybrid applications with https://vaadin.com/flow[Vaadin Flow^] and Hilla as before.
Hilla continues to be built and supported by Vaadin, just like Fusion.

== Can I use Jakarta EE or Quarkus instead of Spring Boot?
Currently neither Jakarta EE nor Quarkus support is on the roadmap, but we are aware that some people would be interested in those technologies as well.
Let us know if you would be interested in using either by showing your interest in https://github.com/vaadin/hilla/issues/211[this GitHub issue^].
If we know there is enough demand, that gives us some guidance to adjust the priorities.
