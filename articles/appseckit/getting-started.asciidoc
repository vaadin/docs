---
title: Getting Started
order: 2
layout: page
---

[[appseckit.introduction]]
= Getting Started with AppSec Kit

AppSec Kit monitors your application dependencies for vulnerabilities. It lets you visualize details on found vulnerabilities and store your analysis to share with other developers.

This is a step-by-step guide on how to use AppSec Kit in an application


=== Add AppSec Kit Dependency

To start, you need to add AppSec Kit as a dependency to your application. For example, to add to a Maven project, do something like this:

.pom.xml
[source,xml]
----
<dependency>
    <groupId>com.vaadin</groupId>
    <artifactId>appsec-kit-v7</artifactId>
</dependency>
----


=== Add `cyclonedx-maven-plugin`

To be able to monitor the application dependencies, AppSec Kit needs a Software Bill of Materials (SBOM) file. This file contains information about the dependencies and their transitives.

To generate the SBOM file, you need to add the link:https://github.com/CycloneDX/cyclonedx-maven-plugin[cyclonedx-maven-plugin] to the plugins:

.pom.xml
[source,xml]
----
<plugin>
    <groupId>org.cyclonedx</groupId>
    <artifactId>cyclonedx-maven-plugin</artifactId>
    <version>2.7.7</version>
    <executions>
        <execution>
            <phase>generate-resources</phase>
            <goals>
                <goal>makeAggregateBom</goal>
            </goals>
        </execution>
    </executions>
    <configuration>
        <projectType>library</projectType>
        <schemaVersion>1.4</schemaVersion>
        <includeBomSerialNumber>true</includeBomSerialNumber>
        <includeCompileScope>true</includeCompileScope>
        <includeProvidedScope>true</includeProvidedScope>
        <includeRuntimeScope>true</includeRuntimeScope>
        <includeSystemScope>true</includeSystemScope>
        <includeTestScope>false</includeTestScope>
        <includeLicenseText>false</includeLicenseText>
        <outputReactorProjects>true</outputReactorProjects>
        <outputFormat>json</outputFormat>
        <outputName>bom</outputName>
        <outputDirectory>${project.build.outputDirectory}/resources</outputDirectory>
        <verbose>false</verbose>
    </configuration>
</plugin>
----

The SBOM file should be generated in the `/resources` sub-directory in the project's output directory. It's a `json` file with the `bom` file name. The plugin is already configured to do it this way.


=== Start the Application

AppSec Kit isn't enabled in production mode. Therefore, you need to start your application in debug mode -- or development mode.

By default, Vaadin 7 applications start in link:https://vaadin.com/docs/v7/framework/application/application-environment#application.environment.parameters.production-mode[debug mode]. You don't need to enable this, explicitly.

To start the application, execute the following from the command-line:

----
mvn jetty:run
----


=== Open AppSec Kit UI

==== Notification Dialog

After the application has started, AppSec Kit analyzes the dependencies, collects the vulnerabilities if any exists, and displays the <<getting-started-notification-dialog>> where you can open the `UI` in a new tab.

[[getting-started-notification-dialog]]
.AppSec Kit Notification Dialog
image::img/notification-dialog.png[]

==== Vulnerabilities View

The starting page of the UI is the <<getting-started-vulnerabilities-tab>> where you can see the collected vulnerabilities if any exists. They are shown in a grid view which has different columns to help identify the vulnerability, the dependency it has been found in, the severity, the risk score and some analyses. You can `Filter` the vulnerabilities by using the dependency, developer analysis and severity level filters. You can also reset the filters by clicking on the `Clear` button.

You can run a new scan to update the collected vulnerabilities by clicking the `Scan now` button. After it has finished the scan the `Last Scan` date and time is updated.

If you want to see more details about a vulnerability you should select the row containing the vulnerability and after clicking the `Show details` button, or you can just double-click on the given row. Then the `Vulnerability Details View` will be opened.

[[getting-started-vulnerabilities-tab]]
.AppSec Kit Vulnerabilities View
image::img/vulnerabilities-tab.png[]

==== Vulnerability Details View

In the <<getting-started-vulnerability-details-view>> you can find more details, description, references and developer analysis of the vulnerability. In the `Developer analysis` on the right side you can set the `Vulnerability status` and optionally add a description to it. After you can save it by clicking the `Save` button.

[[getting-started-vulnerability-details-view]]
.AppSec Kit Vulnerability Details View
image::img/vulnerability-details-view.png[]

==== Dependencies View

To see your application dependencies you should open the <<getting-started-dependencies-tab>> where you can find a list. They are also shown in a grid view with all the important columns to identifying them. You can use the `Filter` functionality here too.

[[getting-started-dependencies-tab]]
.AppSec Kit Dependencies View
image::img/dependencies-tab.png[]
