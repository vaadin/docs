---
title: Style Guidelines
order: 7
layout: page
---

= Style Guidelines for Vaadin Documentation
:toc: macro
:toc-placement: preamble
:experimental:

This document briefly describes various style guidelines for Vaadin documentation. The basic markup instructions are given in the http://vaadin.com/download/book-of-vaadin/authoring/vaadin-asciidoc-cheatsheet.pdf[AsciiDoc Reference for Vaadin Documentation] (PDF).

toc::[]

== Document Source Conventions

In the following, we consider some conventions for AsciiDoc source files.

=== One Line per Sentence

You should aim to write one line per sentence.
AsciiDoc does not care about line breaks, only paragraph breaks.
This helps in organizing sentences simply by moving one line.
For example, in Atom you can do that with kbd:[Ctrl+Up] and kbd:[Ctrl+Down].
You can also more easily delete or comment out a sentence.
It also prevents line reflow when editing a single sentence.
The convention thus also helps in viewing documentation diffs, etc.

[source, AsciiDoc]
----
You should aim to write one line per sentence.
AsciiDoc does not care about line breaks, only paragraph breaks.
This helps in organizing sentences simply by moving one line.
For example, in Atom you can do that with kbd:[Ctrl+Up] and kbd:[Ctrl+Down].
You can also more easily delete or outcomment a sentence.
It also prevents line reflow when editing a single sentence.
The convention thus also helps in viewing documentation diffs, etc.

You should also aim to keep sentences short, to fit one line each.
Shorter sentences make text easier to read.
It is not a big problem if some lines are longer – it is just a guideline.
----

You should also aim to keep sentences short, to fit one line each.
Shorter sentences make text easier to read.
It is not a problem if some lines are longer; it is just a guideline.

In Atom, you can press kbd:[Ctrl+Alt+Q] to rewrap the current paragraph or
selection.

== Formatting Style Guidelines

=== Emphasis Styles

Always use the emphasis styles, such as
`+++[+++classname+++]#+++ClassName+++#+++` emphasis for class names and
`+++[+++methodname+++]#+++methodName()+++#+++` for methods. Note also the other
emphasis styles; they are listed in the _AsciiDoc Reference for Vaadin Documentation_.

==== Method Names

Method names should have empty parentheses in the end to denote that they are
methods. Parameter types should not be listed for methods, unless it is
especially necessary to indicate the specific version of a method. Also, a
parameter can be given in cases such as the following:

[example]
====
Call `setEnabled(false)` to disable it.
====

=== Code Blocks

Source code listings should have the file type indicated to enable highlighting.

[example]
====
For example:

 [source, java]
 ----
 Button button = new Button("OK");
 ----

Will show as:

[source, java]
----
Button button = new Button("OK");
----
====

Note that you can not mix source formatting with emphasis, such as the +++[replaceable]+++ style.
Also, XML formats ugly in the print edition, so please do not use source code type for that.

For print edition, code blocks have line length limit of 63 characters.
If lines are longer than that, they can wrap very ugly.
Please indent lines manually so that they are pretty.

=== Taking Screenshots

Every page should have at least one screenshot.
There should be one at least in an introduction or overview.


== English Language

=== Introductory Clauses

Always use comma after an link:https://owl.english.purdue.edu/owl/resource/607/03/[introductory clause, phrase, or word].

[example]
====
* _After a while, you can look into it._

* _Nevertheless, fields are components._

* _Meanwhile, you can use a workaround._

* _Also, let us make the call to the REST service._
====

=== Introducing a Listing

You should use the word _follows_ or _following_ to introduce a list or code listing.
Examples are introduced with "_for example_".
The sentence should be ended with a colon (not period).

For example:

[example]
====
_For example:_

_You can use the following items:_

_It should now look as follows:_
====

_Avoid_ using the word [line-through]#like# and other similar words.

=== Contractions

Do not use link:https://en.wikipedia.org/wiki/Contraction_%28grammar%29#English[contractions], such as _don't_ or _we're_.

====
_Do not_ write contractions, _we are_ very particular about that.
====

pass:[<!-- vale Vaadin.Abbr = NO -->]

=== Latin Abbreviations

Do not use the following Latin abbreviations, but rather write them in English:

e.g.::
  Rather use expression such as _such as_, _for example_, or _for instance_.

+
Note that _for example_ http://www.myenglishteacher.net/forexample.html[always requires] surrounding commas, while _such as_ only requires preceding comma when it is used in the beginning of a restrictive clause.

+
[example]
====
* You may find, _for example_, JSF or Flash more suitable for such purposes.

* _For example_, consider that you have the following composite class.

* You may find frameworks _such as_ JSF or Flash more suitable for such purposes.

* Some frameworks, _such as_ JSF or Flash, can be more suitable for such purposes.
====

i.e.::
  Rather use "_that is_", surrounded with commas.

+
[example]
====
The parameter is the class name of the widget set, that is, without
the extension.
====

etc.::
  This abbreviation is sometimes fine to use, but you are nevertheless encouraged to use expressions such as _and so forth_. If used, it should be preceded by comma and followed by period.

+
[example]
====
* You would normally implement some views, _etc_.

* You would normally implement some views, _and so forth_.
====

pass:[<!-- vale Vaadin.Abbr = YES -->]

=== Lists

Lists should begin with a colon (:) after an introductory clause.
If there are more than two items, you should use link:https://en.wikipedia.org/wiki/Serial_comma[serial comma] (or Oxford comma) before the conjunction.

[example]
====
_Vaadin has three kinds of components: fields, layouts, and other components._
====

Usually, if the items require an article (the, a, an), it should only be for the
first item, unless emphasis is needed.

=== Words

pass:[<!-- vale Vale.Spelling = NO -->]

* Use _space key_ rather than spacekey. (Note that space key is a generic name and should be lower case)

pass:[<!-- vale Vale.Spelling = YES -->]

=== Plurals

* _Data_ is singular, http://www.theguardian.com/news/datablog/2010/jul/16/data-plural-singular[not plural].

=== Articles

Missing articles are a very common problem, especially for Finnish writers.

Please refer to:

// Because of Finnish text
pass:[<!-- vale Vale.Spelling = NO -->]

* http://www.grammarly.com/handbook/grammar/articles/[Grammarly Handbook] about the use of articles (in English)

* https://englantia.wordpress.com/grammar/yksikko-monikko-ja-artikkelit/[Yksikkö, monikko ja artikkelit] (in Finnish)

* http://materiaalit.internetix.fi/fi/kielet/englanti11/e1_lesson2.htm[Articles] (in Finnish)

* etc.

pass:[<!-- vale Vale.Spelling = YES -->]

==== Repeating Articles in Lists

One common issue is whether to repeat articles in lists of two or more items.
In general, the latter article can be left out if.
In the following cases it would be needed:

* There's some ambiguity: _a text field has a caption and input box_ (the _box_ would also refer to the caption: "_caption box_") ->
** _A text field has a caption and an input box_

+
In a similar way, an adjective for an item could cause ambiguity whether it is for the following item or also the next ones: _a nested field and layout_.
* Need to emphasize the list, or that the items are distinct and each is important:
** _You have two ways: the right way and the wrong way_.
** _The Good, the Bad, and the Ugly_


=== Title Case

You should use title or headline case for all titles, be them chapter, section, or sub-section titles.

[example]
====
 = Style Guidelines for Vaadin Documentation
====

For a detailed description of capitalization rules, see for example:

* http://grammar.yourdictionary.com/capitalization/rules-for-capitalization-in-titles.html[Rules for Capitalization in Titles of Articles]: Your Dictionary
