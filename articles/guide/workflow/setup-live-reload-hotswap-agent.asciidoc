---
title: Setting Up Live Reload Using HotswapAgent
order: 4
layout: page
---

= Setting Up Live Reload Using HotswapAgent

Live Reload works seamlessly on development mode using HotswapAgent for runtime class and resource redefinition.
If you want to know more about the features of HotswapAgent, the documentation in the http://hotswapagent.org/[HotswapAgent webpage] is a good resource.

We suggest running your Vaadin project with https://github.com/TravaOpenJDK/trava-jdk-11-dcevm/releases[TravaOpenJDK DCEVM] (JDK for enhanced class redefinition), version 11.0.7+2 or later.
This JDK bundles HotswapAgent version 1.4.1 with full Live Reload support.
Setup is in most cases as easy as downloading the JDK and configuring your IDE to use it.

== Step-by-step guide

. Download and unpack the latest version of https://github.com/TravaOpenJDK/trava-jdk-11-dcevm/releases[DCEVM JDK], add the JDK to your IDE, and set your project / run configuration to use it.
  Alternatively set `JAVA_HOME` to its location.
. Depending on your project technology stack, you might have to apply <<configuration, additional configuration>>.
. Using your IDE's debug command, start the Vaadin application (development deployment mode).
. Navigate to a view in your application, edit any Java file in the project, recompile, and the browser will automatically reload the page with the changes.

== [#configuration]#Additional configuration#

* HotswapAgent relies on the IDE to auto-reload compiled classes, which normally occurs automatically in debug mode.
  To use HotswapAgent in run mode, add the line `autoHotswap=true` to `hotswap-agent.properties`, or add the following JVM parameter: `-javaagent:__<path/to/hotswap-agent.jar>__=autoHotswap=true`.
* Jetty: ensure automatic restart based on resource scanning is disabled (if using the Jetty Maven plugin, omit or set `<scanIntervalSeconds>` to a value of  `0` or less).
* The Live Reload quiet time (milliseconds since last Java change before refreshing the browser) can be adjusted by the parameter `vaadin.liveReloadQuietTime` in `hotswap-agent.properties`.
  The default is 1000 ms. Increase this value if you notice the browser refreshing before modified Java files have been fully compiled.
* NetBeans: adding the configuration parameter `autoHotswap=true` might be needed for Live Reload to work.
  Add the line `autoHotswap=true` to `hotswap-agent.properties` in your project's resources folder or set the following debug property (available at `Project Properties > Actions > Actions: Debug project > Set Properties`): `Env.MAVEN_OPTS=-XXaltjvm=dcevm -javaagent:``_<path/to/hotswap-agent.jar>_``=autoHotswap=true`.
* Intellij IDEA: avoid using the `Build project automatically` and `compiler.automake.allow.when.app.running` options simultaneously, since this may trigger automatic reload before classes are hotswapped properly.

== Current limitations
* The Vaadin plugin included in the bundled HotswapAgent (1.4.1) does not work with servers that use application classloaders, for instance Wildfly, TomEE or Payara.
This bug is fixed in a https://github.com/HotswapProjects/HotswapAgent/releases/tag/1.4.2-SNAPSHOT[prerelease version of HotswapAgent].
To use it, download the JAR and pass the following JVM parameters to replace the bundled HotswapAgent with the corrected version: `-XX:+DisableHotswapAgent -javaagent:__<path/to/hotswap-agent.jar>__`
