import type { CSSResultGroup } from 'lit';
import docsCss from 'Frontend/themes/docs/styles.css?inline';

function createStylesheet(css: CSSResultGroup | string): CSSStyleSheet {
  const stylesheet = new CSSStyleSheet();
  // CSS imported with ?inline is actually a string in DSP, but typed as CSSResultGroup due to TS
  // types generated by Flow.
  // eslint-disable-next-line @typescript-eslint/no-base-to-string
  const cssString = css.toString();
  stylesheet.replaceSync(cssString);
  return stylesheet;
}

const docsStylesheet = createStylesheet(docsCss);

export function applyTheme(root: DocumentOrShadowRoot) {
  if (!root.adoptedStyleSheets.includes(docsStylesheet)) {
    root.adoptedStyleSheets = [...root.adoptedStyleSheets, docsStylesheet];
  }
}

export function addStylesheet(css: CSSResultGroup | string) {
  const stylesheet = createStylesheet(css);
  document.adoptedStyleSheets = [...document.adoptedStyleSheets, stylesheet];
}
